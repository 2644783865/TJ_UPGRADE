//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ZCZJ_DPF.Contract_Data.Contract_Review_Print {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_CM_CONREV")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_CM_CONREV : global::System.Data.DataSet {
        
        private dtCYDataTable tabledtCY;
        
        private dtXSDataTable tabledtXS;
        
        private dtCGDataTable tabledtCG;
        
        private dtJSDataTable tabledtJS;
        
        private dtFBDataTable tabledtFB;
        
        private dtQTDataTable tabledtQT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_CM_CONREV() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_CM_CONREV(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtCY"] != null)) {
                    base.Tables.Add(new dtCYDataTable(ds.Tables["dtCY"]));
                }
                if ((ds.Tables["dtXS"] != null)) {
                    base.Tables.Add(new dtXSDataTable(ds.Tables["dtXS"]));
                }
                if ((ds.Tables["dtCG"] != null)) {
                    base.Tables.Add(new dtCGDataTable(ds.Tables["dtCG"]));
                }
                if ((ds.Tables["dtJS"] != null)) {
                    base.Tables.Add(new dtJSDataTable(ds.Tables["dtJS"]));
                }
                if ((ds.Tables["dtFB"] != null)) {
                    base.Tables.Add(new dtFBDataTable(ds.Tables["dtFB"]));
                }
                if ((ds.Tables["dtQT"] != null)) {
                    base.Tables.Add(new dtQTDataTable(ds.Tables["dtQT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCYDataTable dtCY {
            get {
                return this.tabledtCY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtXSDataTable dtXS {
            get {
                return this.tabledtXS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCGDataTable dtCG {
            get {
                return this.tabledtCG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtJSDataTable dtJS {
            get {
                return this.tabledtJS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtFBDataTable dtFB {
            get {
                return this.tabledtFB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtQTDataTable dtQT {
            get {
                return this.tabledtQT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_CM_CONREV cln = ((DataSet_CM_CONREV)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtCY"] != null)) {
                    base.Tables.Add(new dtCYDataTable(ds.Tables["dtCY"]));
                }
                if ((ds.Tables["dtXS"] != null)) {
                    base.Tables.Add(new dtXSDataTable(ds.Tables["dtXS"]));
                }
                if ((ds.Tables["dtCG"] != null)) {
                    base.Tables.Add(new dtCGDataTable(ds.Tables["dtCG"]));
                }
                if ((ds.Tables["dtJS"] != null)) {
                    base.Tables.Add(new dtJSDataTable(ds.Tables["dtJS"]));
                }
                if ((ds.Tables["dtFB"] != null)) {
                    base.Tables.Add(new dtFBDataTable(ds.Tables["dtFB"]));
                }
                if ((ds.Tables["dtQT"] != null)) {
                    base.Tables.Add(new dtQTDataTable(ds.Tables["dtQT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtCY = ((dtCYDataTable)(base.Tables["dtCY"]));
            if ((initTable == true)) {
                if ((this.tabledtCY != null)) {
                    this.tabledtCY.InitVars();
                }
            }
            this.tabledtXS = ((dtXSDataTable)(base.Tables["dtXS"]));
            if ((initTable == true)) {
                if ((this.tabledtXS != null)) {
                    this.tabledtXS.InitVars();
                }
            }
            this.tabledtCG = ((dtCGDataTable)(base.Tables["dtCG"]));
            if ((initTable == true)) {
                if ((this.tabledtCG != null)) {
                    this.tabledtCG.InitVars();
                }
            }
            this.tabledtJS = ((dtJSDataTable)(base.Tables["dtJS"]));
            if ((initTable == true)) {
                if ((this.tabledtJS != null)) {
                    this.tabledtJS.InitVars();
                }
            }
            this.tabledtFB = ((dtFBDataTable)(base.Tables["dtFB"]));
            if ((initTable == true)) {
                if ((this.tabledtFB != null)) {
                    this.tabledtFB.InitVars();
                }
            }
            this.tabledtQT = ((dtQTDataTable)(base.Tables["dtQT"]));
            if ((initTable == true)) {
                if ((this.tabledtQT != null)) {
                    this.tabledtQT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_CM_CONREV";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_CM_CONREV.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtCY = new dtCYDataTable();
            base.Tables.Add(this.tabledtCY);
            this.tabledtXS = new dtXSDataTable();
            base.Tables.Add(this.tabledtXS);
            this.tabledtCG = new dtCGDataTable();
            base.Tables.Add(this.tabledtCG);
            this.tabledtJS = new dtJSDataTable();
            base.Tables.Add(this.tabledtJS);
            this.tabledtFB = new dtFBDataTable();
            base.Tables.Add(this.tabledtFB);
            this.tabledtQT = new dtQTDataTable();
            base.Tables.Add(this.tabledtQT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtXS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtJS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtFB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtQT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtCYRowChangeEventHandler(object sender, dtCYRowChangeEvent e);
        
        public delegate void dtXSRowChangeEventHandler(object sender, dtXSRowChangeEvent e);
        
        public delegate void dtCGRowChangeEventHandler(object sender, dtCGRowChangeEvent e);
        
        public delegate void dtJSRowChangeEventHandler(object sender, dtJSRowChangeEvent e);
        
        public delegate void dtFBRowChangeEventHandler(object sender, dtFBRowChangeEvent e);
        
        public delegate void dtQTRowChangeEventHandler(object sender, dtQTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCYDataTable : global::System.Data.TypedTableBase<dtCYRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_CYBYJ;
            
            private global::System.Data.DataColumn columnCR_CYJBR;
            
            private global::System.Data.DataColumn columnCR_CYFZR;
            
            private global::System.Data.DataColumn columnCR_SCBYJ;
            
            private global::System.Data.DataColumn columnCR_SCFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYDataTable() {
                this.TableName = "dtCY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CYBYJColumn {
                get {
                    return this.columnCR_CYBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CYJBRColumn {
                get {
                    return this.columnCR_CYJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CYFZRColumn {
                get {
                    return this.columnCR_CYFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCBYJColumn {
                get {
                    return this.columnCR_SCBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCFZRColumn {
                get {
                    return this.columnCR_SCFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYRow this[int index] {
                get {
                    return ((dtCYRow)(this.Rows[index]));
                }
            }
            
            public event dtCYRowChangeEventHandler dtCYRowChanging;
            
            public event dtCYRowChangeEventHandler dtCYRowChanged;
            
            public event dtCYRowChangeEventHandler dtCYRowDeleting;
            
            public event dtCYRowChangeEventHandler dtCYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCYRow(dtCYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYRow AdddtCYRow(string cr_xmmc, string cr_sbmc, string cr_fbsmc, string cr_fbfw, string CR_CYBYJ, string CR_CYJBR, string CR_CYFZR, string CR_SCBYJ, string CR_SCFZR, string CR_CWBYJ, string CR_CWFZR, string CR_LDYJ, string CR_LD) {
                dtCYRow rowdtCYRow = ((dtCYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_CYBYJ,
                        CR_CYJBR,
                        CR_CYFZR,
                        CR_SCBYJ,
                        CR_SCFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtCYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCYRow);
                return rowdtCYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCYDataTable cln = ((dtCYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_CYBYJ = base.Columns["CR_CYBYJ"];
                this.columnCR_CYJBR = base.Columns["CR_CYJBR"];
                this.columnCR_CYFZR = base.Columns["CR_CYFZR"];
                this.columnCR_SCBYJ = base.Columns["CR_SCBYJ"];
                this.columnCR_SCFZR = base.Columns["CR_SCFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_CYBYJ = new global::System.Data.DataColumn("CR_CYBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CYBYJ);
                this.columnCR_CYJBR = new global::System.Data.DataColumn("CR_CYJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CYJBR);
                this.columnCR_CYFZR = new global::System.Data.DataColumn("CR_CYFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CYFZR);
                this.columnCR_SCBYJ = new global::System.Data.DataColumn("CR_SCBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCBYJ);
                this.columnCR_SCFZR = new global::System.Data.DataColumn("CR_SCFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_CYBYJ.MaxLength = 500;
                this.columnCR_CYJBR.MaxLength = 50;
                this.columnCR_CYFZR.MaxLength = 50;
                this.columnCR_SCBYJ.MaxLength = 500;
                this.columnCR_SCFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYRow NewdtCYRow() {
                return ((dtCYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCYRowChanged != null)) {
                    this.dtCYRowChanged(this, new dtCYRowChangeEvent(((dtCYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCYRowChanging != null)) {
                    this.dtCYRowChanging(this, new dtCYRowChangeEvent(((dtCYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCYRowDeleted != null)) {
                    this.dtCYRowDeleted(this, new dtCYRowChangeEvent(((dtCYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCYRowDeleting != null)) {
                    this.dtCYRowDeleting(this, new dtCYRowChangeEvent(((dtCYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCYRow(dtCYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtXSDataTable : global::System.Data.TypedTableBase<dtXSRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_XSBYJ;
            
            private global::System.Data.DataColumn columnCR_XSJBR;
            
            private global::System.Data.DataColumn columnCR_XSFZR;
            
            private global::System.Data.DataColumn columnCR_JSBYJ;
            
            private global::System.Data.DataColumn columnCR_JSFZR;
            
            private global::System.Data.DataColumn columnCR_ZLBYJ;
            
            private global::System.Data.DataColumn columnCR_ZLFZR;
            
            private global::System.Data.DataColumn columnCR_SCBYJ;
            
            private global::System.Data.DataColumn columnCR_SCFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSDataTable() {
                this.TableName = "dtXS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtXSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtXSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_XSBYJColumn {
                get {
                    return this.columnCR_XSBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_XSJBRColumn {
                get {
                    return this.columnCR_XSJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_XSFZRColumn {
                get {
                    return this.columnCR_XSFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSBYJColumn {
                get {
                    return this.columnCR_JSBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSFZRColumn {
                get {
                    return this.columnCR_JSFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLBYJColumn {
                get {
                    return this.columnCR_ZLBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLFZRColumn {
                get {
                    return this.columnCR_ZLFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCBYJColumn {
                get {
                    return this.columnCR_SCBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCFZRColumn {
                get {
                    return this.columnCR_SCFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSRow this[int index] {
                get {
                    return ((dtXSRow)(this.Rows[index]));
                }
            }
            
            public event dtXSRowChangeEventHandler dtXSRowChanging;
            
            public event dtXSRowChangeEventHandler dtXSRowChanged;
            
            public event dtXSRowChangeEventHandler dtXSRowDeleting;
            
            public event dtXSRowChangeEventHandler dtXSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtXSRow(dtXSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSRow AdddtXSRow(
                        string cr_xmmc, 
                        string cr_sbmc, 
                        string cr_fbsmc, 
                        string cr_fbfw, 
                        string CR_XSBYJ, 
                        string CR_XSJBR, 
                        string CR_XSFZR, 
                        string CR_JSBYJ, 
                        string CR_JSFZR, 
                        string CR_ZLBYJ, 
                        string CR_ZLFZR, 
                        string CR_SCBYJ, 
                        string CR_SCFZR, 
                        string CR_CWBYJ, 
                        string CR_CWFZR, 
                        string CR_LDYJ, 
                        string CR_LD) {
                dtXSRow rowdtXSRow = ((dtXSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_XSBYJ,
                        CR_XSJBR,
                        CR_XSFZR,
                        CR_JSBYJ,
                        CR_JSFZR,
                        CR_ZLBYJ,
                        CR_ZLFZR,
                        CR_SCBYJ,
                        CR_SCFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtXSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtXSRow);
                return rowdtXSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtXSDataTable cln = ((dtXSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtXSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_XSBYJ = base.Columns["CR_XSBYJ"];
                this.columnCR_XSJBR = base.Columns["CR_XSJBR"];
                this.columnCR_XSFZR = base.Columns["CR_XSFZR"];
                this.columnCR_JSBYJ = base.Columns["CR_JSBYJ"];
                this.columnCR_JSFZR = base.Columns["CR_JSFZR"];
                this.columnCR_ZLBYJ = base.Columns["CR_ZLBYJ"];
                this.columnCR_ZLFZR = base.Columns["CR_ZLFZR"];
                this.columnCR_SCBYJ = base.Columns["CR_SCBYJ"];
                this.columnCR_SCFZR = base.Columns["CR_SCFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_XSBYJ = new global::System.Data.DataColumn("CR_XSBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_XSBYJ);
                this.columnCR_XSJBR = new global::System.Data.DataColumn("CR_XSJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_XSJBR);
                this.columnCR_XSFZR = new global::System.Data.DataColumn("CR_XSFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_XSFZR);
                this.columnCR_JSBYJ = new global::System.Data.DataColumn("CR_JSBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSBYJ);
                this.columnCR_JSFZR = new global::System.Data.DataColumn("CR_JSFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSFZR);
                this.columnCR_ZLBYJ = new global::System.Data.DataColumn("CR_ZLBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLBYJ);
                this.columnCR_ZLFZR = new global::System.Data.DataColumn("CR_ZLFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLFZR);
                this.columnCR_SCBYJ = new global::System.Data.DataColumn("CR_SCBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCBYJ);
                this.columnCR_SCFZR = new global::System.Data.DataColumn("CR_SCFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_XSBYJ.MaxLength = 500;
                this.columnCR_XSJBR.MaxLength = 50;
                this.columnCR_XSFZR.MaxLength = 50;
                this.columnCR_JSBYJ.MaxLength = 500;
                this.columnCR_JSFZR.MaxLength = 50;
                this.columnCR_ZLBYJ.MaxLength = 500;
                this.columnCR_ZLFZR.MaxLength = 50;
                this.columnCR_SCBYJ.MaxLength = 500;
                this.columnCR_SCFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSRow NewdtXSRow() {
                return ((dtXSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtXSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtXSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtXSRowChanged != null)) {
                    this.dtXSRowChanged(this, new dtXSRowChangeEvent(((dtXSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtXSRowChanging != null)) {
                    this.dtXSRowChanging(this, new dtXSRowChangeEvent(((dtXSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtXSRowDeleted != null)) {
                    this.dtXSRowDeleted(this, new dtXSRowChangeEvent(((dtXSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtXSRowDeleting != null)) {
                    this.dtXSRowDeleting(this, new dtXSRowChangeEvent(((dtXSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtXSRow(dtXSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtXSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCGDataTable : global::System.Data.TypedTableBase<dtCGRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_CGBYJ;
            
            private global::System.Data.DataColumn columnCR_CGJBR;
            
            private global::System.Data.DataColumn columnCR_CGFZR;
            
            private global::System.Data.DataColumn columnCR_JSBYJ;
            
            private global::System.Data.DataColumn columnCR_JSFZR;
            
            private global::System.Data.DataColumn columnCR_ZLBYJ;
            
            private global::System.Data.DataColumn columnCR_ZLFZR;
            
            private global::System.Data.DataColumn columnCR_SCBYJ;
            
            private global::System.Data.DataColumn columnCR_SCFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGDataTable() {
                this.TableName = "dtCG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CGBYJColumn {
                get {
                    return this.columnCR_CGBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CGJBRColumn {
                get {
                    return this.columnCR_CGJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CGFZRColumn {
                get {
                    return this.columnCR_CGFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSBYJColumn {
                get {
                    return this.columnCR_JSBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSFZRColumn {
                get {
                    return this.columnCR_JSFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLBYJColumn {
                get {
                    return this.columnCR_ZLBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLFZRColumn {
                get {
                    return this.columnCR_ZLFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCBYJColumn {
                get {
                    return this.columnCR_SCBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCFZRColumn {
                get {
                    return this.columnCR_SCFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGRow this[int index] {
                get {
                    return ((dtCGRow)(this.Rows[index]));
                }
            }
            
            public event dtCGRowChangeEventHandler dtCGRowChanging;
            
            public event dtCGRowChangeEventHandler dtCGRowChanged;
            
            public event dtCGRowChangeEventHandler dtCGRowDeleting;
            
            public event dtCGRowChangeEventHandler dtCGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCGRow(dtCGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGRow AdddtCGRow(
                        string cr_xmmc, 
                        string cr_sbmc, 
                        string cr_fbsmc, 
                        string cr_fbfw, 
                        string CR_CGBYJ, 
                        string CR_CGJBR, 
                        string CR_CGFZR, 
                        string CR_JSBYJ, 
                        string CR_JSFZR, 
                        string CR_ZLBYJ, 
                        string CR_ZLFZR, 
                        string CR_SCBYJ, 
                        string CR_SCFZR, 
                        string CR_CWBYJ, 
                        string CR_CWFZR, 
                        string CR_LDYJ, 
                        string CR_LD) {
                dtCGRow rowdtCGRow = ((dtCGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_CGBYJ,
                        CR_CGJBR,
                        CR_CGFZR,
                        CR_JSBYJ,
                        CR_JSFZR,
                        CR_ZLBYJ,
                        CR_ZLFZR,
                        CR_SCBYJ,
                        CR_SCFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtCGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCGRow);
                return rowdtCGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCGDataTable cln = ((dtCGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_CGBYJ = base.Columns["CR_CGBYJ"];
                this.columnCR_CGJBR = base.Columns["CR_CGJBR"];
                this.columnCR_CGFZR = base.Columns["CR_CGFZR"];
                this.columnCR_JSBYJ = base.Columns["CR_JSBYJ"];
                this.columnCR_JSFZR = base.Columns["CR_JSFZR"];
                this.columnCR_ZLBYJ = base.Columns["CR_ZLBYJ"];
                this.columnCR_ZLFZR = base.Columns["CR_ZLFZR"];
                this.columnCR_SCBYJ = base.Columns["CR_SCBYJ"];
                this.columnCR_SCFZR = base.Columns["CR_SCFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_CGBYJ = new global::System.Data.DataColumn("CR_CGBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CGBYJ);
                this.columnCR_CGJBR = new global::System.Data.DataColumn("CR_CGJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CGJBR);
                this.columnCR_CGFZR = new global::System.Data.DataColumn("CR_CGFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CGFZR);
                this.columnCR_JSBYJ = new global::System.Data.DataColumn("CR_JSBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSBYJ);
                this.columnCR_JSFZR = new global::System.Data.DataColumn("CR_JSFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSFZR);
                this.columnCR_ZLBYJ = new global::System.Data.DataColumn("CR_ZLBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLBYJ);
                this.columnCR_ZLFZR = new global::System.Data.DataColumn("CR_ZLFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLFZR);
                this.columnCR_SCBYJ = new global::System.Data.DataColumn("CR_SCBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCBYJ);
                this.columnCR_SCFZR = new global::System.Data.DataColumn("CR_SCFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_CGBYJ.MaxLength = 500;
                this.columnCR_CGJBR.MaxLength = 50;
                this.columnCR_CGFZR.MaxLength = 50;
                this.columnCR_JSBYJ.MaxLength = 500;
                this.columnCR_JSFZR.MaxLength = 50;
                this.columnCR_ZLBYJ.MaxLength = 500;
                this.columnCR_ZLFZR.MaxLength = 50;
                this.columnCR_SCBYJ.MaxLength = 500;
                this.columnCR_SCFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGRow NewdtCGRow() {
                return ((dtCGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCGRowChanged != null)) {
                    this.dtCGRowChanged(this, new dtCGRowChangeEvent(((dtCGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCGRowChanging != null)) {
                    this.dtCGRowChanging(this, new dtCGRowChangeEvent(((dtCGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCGRowDeleted != null)) {
                    this.dtCGRowDeleted(this, new dtCGRowChangeEvent(((dtCGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCGRowDeleting != null)) {
                    this.dtCGRowDeleting(this, new dtCGRowChangeEvent(((dtCGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCGRow(dtCGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtJSDataTable : global::System.Data.TypedTableBase<dtJSRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_JSBYJ;
            
            private global::System.Data.DataColumn columnCR_JSJBR;
            
            private global::System.Data.DataColumn columnCR_JSFZR;
            
            private global::System.Data.DataColumn columnCR_ZLBYJ;
            
            private global::System.Data.DataColumn columnCR_ZLFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSDataTable() {
                this.TableName = "dtJS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtJSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtJSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSBYJColumn {
                get {
                    return this.columnCR_JSBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSJBRColumn {
                get {
                    return this.columnCR_JSJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSFZRColumn {
                get {
                    return this.columnCR_JSFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLBYJColumn {
                get {
                    return this.columnCR_ZLBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLFZRColumn {
                get {
                    return this.columnCR_ZLFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSRow this[int index] {
                get {
                    return ((dtJSRow)(this.Rows[index]));
                }
            }
            
            public event dtJSRowChangeEventHandler dtJSRowChanging;
            
            public event dtJSRowChangeEventHandler dtJSRowChanged;
            
            public event dtJSRowChangeEventHandler dtJSRowDeleting;
            
            public event dtJSRowChangeEventHandler dtJSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtJSRow(dtJSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSRow AdddtJSRow(string cr_xmmc, string cr_sbmc, string cr_fbsmc, string cr_fbfw, string CR_JSBYJ, string CR_JSJBR, string CR_JSFZR, string CR_ZLBYJ, string CR_ZLFZR, string CR_CWBYJ, string CR_CWFZR, string CR_LDYJ, string CR_LD) {
                dtJSRow rowdtJSRow = ((dtJSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_JSBYJ,
                        CR_JSJBR,
                        CR_JSFZR,
                        CR_ZLBYJ,
                        CR_ZLFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtJSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtJSRow);
                return rowdtJSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtJSDataTable cln = ((dtJSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtJSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_JSBYJ = base.Columns["CR_JSBYJ"];
                this.columnCR_JSJBR = base.Columns["CR_JSJBR"];
                this.columnCR_JSFZR = base.Columns["CR_JSFZR"];
                this.columnCR_ZLBYJ = base.Columns["CR_ZLBYJ"];
                this.columnCR_ZLFZR = base.Columns["CR_ZLFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_JSBYJ = new global::System.Data.DataColumn("CR_JSBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSBYJ);
                this.columnCR_JSJBR = new global::System.Data.DataColumn("CR_JSJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSJBR);
                this.columnCR_JSFZR = new global::System.Data.DataColumn("CR_JSFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSFZR);
                this.columnCR_ZLBYJ = new global::System.Data.DataColumn("CR_ZLBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLBYJ);
                this.columnCR_ZLFZR = new global::System.Data.DataColumn("CR_ZLFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_JSBYJ.MaxLength = 500;
                this.columnCR_JSJBR.MaxLength = 50;
                this.columnCR_JSFZR.MaxLength = 50;
                this.columnCR_ZLBYJ.MaxLength = 500;
                this.columnCR_ZLFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSRow NewdtJSRow() {
                return ((dtJSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtJSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtJSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtJSRowChanged != null)) {
                    this.dtJSRowChanged(this, new dtJSRowChangeEvent(((dtJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtJSRowChanging != null)) {
                    this.dtJSRowChanging(this, new dtJSRowChangeEvent(((dtJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtJSRowDeleted != null)) {
                    this.dtJSRowDeleted(this, new dtJSRowChangeEvent(((dtJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtJSRowDeleting != null)) {
                    this.dtJSRowDeleting(this, new dtJSRowChangeEvent(((dtJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtJSRow(dtJSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtJSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtFBDataTable : global::System.Data.TypedTableBase<dtFBRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_SCBYJ;
            
            private global::System.Data.DataColumn columnCR_SCJBR;
            
            private global::System.Data.DataColumn columnCR_SCFZR;
            
            private global::System.Data.DataColumn columnCR_JSBYJ;
            
            private global::System.Data.DataColumn columnCR_JSFZR;
            
            private global::System.Data.DataColumn columnCR_ZLBYJ;
            
            private global::System.Data.DataColumn columnCR_ZLFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBDataTable() {
                this.TableName = "dtFB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtFBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCBYJColumn {
                get {
                    return this.columnCR_SCBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCJBRColumn {
                get {
                    return this.columnCR_SCJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_SCFZRColumn {
                get {
                    return this.columnCR_SCFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSBYJColumn {
                get {
                    return this.columnCR_JSBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JSFZRColumn {
                get {
                    return this.columnCR_JSFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLBYJColumn {
                get {
                    return this.columnCR_ZLBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZLFZRColumn {
                get {
                    return this.columnCR_ZLFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBRow this[int index] {
                get {
                    return ((dtFBRow)(this.Rows[index]));
                }
            }
            
            public event dtFBRowChangeEventHandler dtFBRowChanging;
            
            public event dtFBRowChangeEventHandler dtFBRowChanged;
            
            public event dtFBRowChangeEventHandler dtFBRowDeleting;
            
            public event dtFBRowChangeEventHandler dtFBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtFBRow(dtFBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBRow AdddtFBRow(string cr_xmmc, string cr_sbmc, string cr_fbsmc, string cr_fbfw, string CR_SCBYJ, string CR_SCJBR, string CR_SCFZR, string CR_JSBYJ, string CR_JSFZR, string CR_ZLBYJ, string CR_ZLFZR, string CR_CWBYJ, string CR_CWFZR, string CR_LDYJ, string CR_LD) {
                dtFBRow rowdtFBRow = ((dtFBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_SCBYJ,
                        CR_SCJBR,
                        CR_SCFZR,
                        CR_JSBYJ,
                        CR_JSFZR,
                        CR_ZLBYJ,
                        CR_ZLFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtFBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtFBRow);
                return rowdtFBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtFBDataTable cln = ((dtFBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtFBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_SCBYJ = base.Columns["CR_SCBYJ"];
                this.columnCR_SCJBR = base.Columns["CR_SCJBR"];
                this.columnCR_SCFZR = base.Columns["CR_SCFZR"];
                this.columnCR_JSBYJ = base.Columns["CR_JSBYJ"];
                this.columnCR_JSFZR = base.Columns["CR_JSFZR"];
                this.columnCR_ZLBYJ = base.Columns["CR_ZLBYJ"];
                this.columnCR_ZLFZR = base.Columns["CR_ZLFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_SCBYJ = new global::System.Data.DataColumn("CR_SCBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCBYJ);
                this.columnCR_SCJBR = new global::System.Data.DataColumn("CR_SCJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCJBR);
                this.columnCR_SCFZR = new global::System.Data.DataColumn("CR_SCFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_SCFZR);
                this.columnCR_JSBYJ = new global::System.Data.DataColumn("CR_JSBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSBYJ);
                this.columnCR_JSFZR = new global::System.Data.DataColumn("CR_JSFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JSFZR);
                this.columnCR_ZLBYJ = new global::System.Data.DataColumn("CR_ZLBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLBYJ);
                this.columnCR_ZLFZR = new global::System.Data.DataColumn("CR_ZLFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZLFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_SCBYJ.MaxLength = 500;
                this.columnCR_SCJBR.MaxLength = 50;
                this.columnCR_SCFZR.MaxLength = 50;
                this.columnCR_JSBYJ.MaxLength = 500;
                this.columnCR_JSFZR.MaxLength = 50;
                this.columnCR_ZLBYJ.MaxLength = 500;
                this.columnCR_ZLFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBRow NewdtFBRow() {
                return ((dtFBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtFBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtFBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtFBRowChanged != null)) {
                    this.dtFBRowChanged(this, new dtFBRowChangeEvent(((dtFBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtFBRowChanging != null)) {
                    this.dtFBRowChanging(this, new dtFBRowChangeEvent(((dtFBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtFBRowDeleted != null)) {
                    this.dtFBRowDeleted(this, new dtFBRowChangeEvent(((dtFBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtFBRowDeleting != null)) {
                    this.dtFBRowDeleting(this, new dtFBRowChangeEvent(((dtFBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtFBRow(dtFBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtFBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtQTDataTable : global::System.Data.TypedTableBase<dtQTRow> {
            
            private global::System.Data.DataColumn columncr_xmmc;
            
            private global::System.Data.DataColumn columncr_sbmc;
            
            private global::System.Data.DataColumn columncr_fbsmc;
            
            private global::System.Data.DataColumn columncr_fbfw;
            
            private global::System.Data.DataColumn columnCR_BMYJ;
            
            private global::System.Data.DataColumn columnCR_BMJBR;
            
            private global::System.Data.DataColumn columnDEP_NAME;
            
            private global::System.Data.DataColumn columnCR_BMFZR;
            
            private global::System.Data.DataColumn columnCR_CWBYJ;
            
            private global::System.Data.DataColumn columnCR_CWFZR;
            
            private global::System.Data.DataColumn columnCR_LDYJ;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTDataTable() {
                this.TableName = "dtQT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtQTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtQTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_xmmcColumn {
                get {
                    return this.columncr_xmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_sbmcColumn {
                get {
                    return this.columncr_sbmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbsmcColumn {
                get {
                    return this.columncr_fbsmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cr_fbfwColumn {
                get {
                    return this.columncr_fbfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BMYJColumn {
                get {
                    return this.columnCR_BMYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BMJBRColumn {
                get {
                    return this.columnCR_BMJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEP_NAMEColumn {
                get {
                    return this.columnDEP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BMFZRColumn {
                get {
                    return this.columnCR_BMFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWBYJColumn {
                get {
                    return this.columnCR_CWBYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWFZRColumn {
                get {
                    return this.columnCR_CWFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDYJColumn {
                get {
                    return this.columnCR_LDYJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTRow this[int index] {
                get {
                    return ((dtQTRow)(this.Rows[index]));
                }
            }
            
            public event dtQTRowChangeEventHandler dtQTRowChanging;
            
            public event dtQTRowChangeEventHandler dtQTRowChanged;
            
            public event dtQTRowChangeEventHandler dtQTRowDeleting;
            
            public event dtQTRowChangeEventHandler dtQTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtQTRow(dtQTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTRow AdddtQTRow(string cr_xmmc, string cr_sbmc, string cr_fbsmc, string cr_fbfw, string CR_BMYJ, string CR_BMJBR, string DEP_NAME, string CR_BMFZR, string CR_CWBYJ, string CR_CWFZR, string CR_LDYJ, string CR_LD) {
                dtQTRow rowdtQTRow = ((dtQTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cr_xmmc,
                        cr_sbmc,
                        cr_fbsmc,
                        cr_fbfw,
                        CR_BMYJ,
                        CR_BMJBR,
                        DEP_NAME,
                        CR_BMFZR,
                        CR_CWBYJ,
                        CR_CWFZR,
                        CR_LDYJ,
                        CR_LD};
                rowdtQTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtQTRow);
                return rowdtQTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtQTDataTable cln = ((dtQTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtQTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncr_xmmc = base.Columns["cr_xmmc"];
                this.columncr_sbmc = base.Columns["cr_sbmc"];
                this.columncr_fbsmc = base.Columns["cr_fbsmc"];
                this.columncr_fbfw = base.Columns["cr_fbfw"];
                this.columnCR_BMYJ = base.Columns["CR_BMYJ"];
                this.columnCR_BMJBR = base.Columns["CR_BMJBR"];
                this.columnDEP_NAME = base.Columns["DEP_NAME"];
                this.columnCR_BMFZR = base.Columns["CR_BMFZR"];
                this.columnCR_CWBYJ = base.Columns["CR_CWBYJ"];
                this.columnCR_CWFZR = base.Columns["CR_CWFZR"];
                this.columnCR_LDYJ = base.Columns["CR_LDYJ"];
                this.columnCR_LD = base.Columns["CR_LD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncr_xmmc = new global::System.Data.DataColumn("cr_xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_xmmc);
                this.columncr_sbmc = new global::System.Data.DataColumn("cr_sbmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_sbmc);
                this.columncr_fbsmc = new global::System.Data.DataColumn("cr_fbsmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbsmc);
                this.columncr_fbfw = new global::System.Data.DataColumn("cr_fbfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncr_fbfw);
                this.columnCR_BMYJ = new global::System.Data.DataColumn("CR_BMYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BMYJ);
                this.columnCR_BMJBR = new global::System.Data.DataColumn("CR_BMJBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BMJBR);
                this.columnDEP_NAME = new global::System.Data.DataColumn("DEP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_NAME);
                this.columnCR_BMFZR = new global::System.Data.DataColumn("CR_BMFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BMFZR);
                this.columnCR_CWBYJ = new global::System.Data.DataColumn("CR_CWBYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWBYJ);
                this.columnCR_CWFZR = new global::System.Data.DataColumn("CR_CWFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWFZR);
                this.columnCR_LDYJ = new global::System.Data.DataColumn("CR_LDYJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LDYJ);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columncr_xmmc.MaxLength = 50;
                this.columncr_sbmc.MaxLength = 50;
                this.columncr_fbsmc.MaxLength = 50;
                this.columncr_fbfw.MaxLength = 50;
                this.columnCR_BMYJ.MaxLength = 500;
                this.columnCR_BMJBR.MaxLength = 50;
                this.columnDEP_NAME.AllowDBNull = false;
                this.columnDEP_NAME.MaxLength = 50;
                this.columnCR_BMFZR.MaxLength = 50;
                this.columnCR_CWBYJ.MaxLength = 500;
                this.columnCR_CWFZR.MaxLength = 50;
                this.columnCR_LDYJ.MaxLength = 500;
                this.columnCR_LD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTRow NewdtQTRow() {
                return ((dtQTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtQTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtQTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtQTRowChanged != null)) {
                    this.dtQTRowChanged(this, new dtQTRowChangeEvent(((dtQTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtQTRowChanging != null)) {
                    this.dtQTRowChanging(this, new dtQTRowChangeEvent(((dtQTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtQTRowDeleted != null)) {
                    this.dtQTRowDeleted(this, new dtQTRowChangeEvent(((dtQTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtQTRowDeleting != null)) {
                    this.dtQTRowDeleting(this, new dtQTRowChangeEvent(((dtQTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtQTRow(dtQTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_CM_CONREV ds = new DataSet_CM_CONREV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtQTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCYRow : global::System.Data.DataRow {
            
            private dtCYDataTable tabledtCY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCY = ((dtCYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CYBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_CYBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CYBYJ\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_CYBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CYJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_CYJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CYJBR\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_CYJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CYFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_CYFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CYFZR\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_CYFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_SCBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCBYJ\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_SCBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_SCFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCFZR\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_SCFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtCY.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtCY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCY.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtCY.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtCY.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtCY.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtCY.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtCY.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtCY.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtCY.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtCY.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CYBYJNull() {
                return this.IsNull(this.tabledtCY.CR_CYBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CYBYJNull() {
                this[this.tabledtCY.CR_CYBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CYJBRNull() {
                return this.IsNull(this.tabledtCY.CR_CYJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CYJBRNull() {
                this[this.tabledtCY.CR_CYJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CYFZRNull() {
                return this.IsNull(this.tabledtCY.CR_CYFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CYFZRNull() {
                this[this.tabledtCY.CR_CYFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCBYJNull() {
                return this.IsNull(this.tabledtCY.CR_SCBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCBYJNull() {
                this[this.tabledtCY.CR_SCBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCFZRNull() {
                return this.IsNull(this.tabledtCY.CR_SCFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCFZRNull() {
                this[this.tabledtCY.CR_SCFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtCY.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtCY.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtCY.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtCY.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtCY.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtCY.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtCY.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtCY.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtXSRow : global::System.Data.DataRow {
            
            private dtXSDataTable tabledtXS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtXSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtXS = ((dtXSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_XSBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_XSBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_XSBYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_XSBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_XSJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_XSJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_XSJBR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_XSJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_XSFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_XSFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_XSFZR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_XSFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_JSBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSBYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_JSBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_JSFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSFZR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_JSFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_ZLBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLBYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_ZLBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_ZLFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLFZR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_ZLFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_SCBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCBYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_SCBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_SCFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCFZR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_SCFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtXS.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtXS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtXS.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtXS.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtXS.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtXS.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtXS.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtXS.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtXS.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtXS.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtXS.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_XSBYJNull() {
                return this.IsNull(this.tabledtXS.CR_XSBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_XSBYJNull() {
                this[this.tabledtXS.CR_XSBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_XSJBRNull() {
                return this.IsNull(this.tabledtXS.CR_XSJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_XSJBRNull() {
                this[this.tabledtXS.CR_XSJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_XSFZRNull() {
                return this.IsNull(this.tabledtXS.CR_XSFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_XSFZRNull() {
                this[this.tabledtXS.CR_XSFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSBYJNull() {
                return this.IsNull(this.tabledtXS.CR_JSBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSBYJNull() {
                this[this.tabledtXS.CR_JSBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSFZRNull() {
                return this.IsNull(this.tabledtXS.CR_JSFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSFZRNull() {
                this[this.tabledtXS.CR_JSFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLBYJNull() {
                return this.IsNull(this.tabledtXS.CR_ZLBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLBYJNull() {
                this[this.tabledtXS.CR_ZLBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLFZRNull() {
                return this.IsNull(this.tabledtXS.CR_ZLFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLFZRNull() {
                this[this.tabledtXS.CR_ZLFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCBYJNull() {
                return this.IsNull(this.tabledtXS.CR_SCBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCBYJNull() {
                this[this.tabledtXS.CR_SCBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCFZRNull() {
                return this.IsNull(this.tabledtXS.CR_SCFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCFZRNull() {
                this[this.tabledtXS.CR_SCFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtXS.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtXS.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtXS.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtXS.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtXS.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtXS.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtXS.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtXS.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCGRow : global::System.Data.DataRow {
            
            private dtCGDataTable tabledtCG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCG = ((dtCGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CGBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_CGBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CGBYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_CGBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CGJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_CGJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CGJBR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_CGJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CGFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_CGFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CGFZR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_CGFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_JSBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSBYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_JSBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_JSFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSFZR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_JSFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_ZLBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLBYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_ZLBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_ZLFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLFZR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_ZLFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_SCBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCBYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_SCBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_SCFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCFZR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_SCFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtCG.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtCG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCG.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtCG.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtCG.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtCG.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtCG.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtCG.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtCG.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtCG.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtCG.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CGBYJNull() {
                return this.IsNull(this.tabledtCG.CR_CGBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CGBYJNull() {
                this[this.tabledtCG.CR_CGBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CGJBRNull() {
                return this.IsNull(this.tabledtCG.CR_CGJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CGJBRNull() {
                this[this.tabledtCG.CR_CGJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CGFZRNull() {
                return this.IsNull(this.tabledtCG.CR_CGFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CGFZRNull() {
                this[this.tabledtCG.CR_CGFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSBYJNull() {
                return this.IsNull(this.tabledtCG.CR_JSBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSBYJNull() {
                this[this.tabledtCG.CR_JSBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSFZRNull() {
                return this.IsNull(this.tabledtCG.CR_JSFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSFZRNull() {
                this[this.tabledtCG.CR_JSFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLBYJNull() {
                return this.IsNull(this.tabledtCG.CR_ZLBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLBYJNull() {
                this[this.tabledtCG.CR_ZLBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLFZRNull() {
                return this.IsNull(this.tabledtCG.CR_ZLFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLFZRNull() {
                this[this.tabledtCG.CR_ZLFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCBYJNull() {
                return this.IsNull(this.tabledtCG.CR_SCBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCBYJNull() {
                this[this.tabledtCG.CR_SCBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCFZRNull() {
                return this.IsNull(this.tabledtCG.CR_SCFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCFZRNull() {
                this[this.tabledtCG.CR_SCFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtCG.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtCG.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtCG.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtCG.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtCG.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtCG.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtCG.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtCG.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtJSRow : global::System.Data.DataRow {
            
            private dtJSDataTable tabledtJS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtJSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtJS = ((dtJSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_JSBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSBYJ\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_JSBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_JSJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSJBR\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_JSJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_JSFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSFZR\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_JSFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_ZLBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLBYJ\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_ZLBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_ZLFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLFZR\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_ZLFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtJS.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtJS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtJS.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtJS.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtJS.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtJS.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtJS.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtJS.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtJS.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtJS.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtJS.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSBYJNull() {
                return this.IsNull(this.tabledtJS.CR_JSBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSBYJNull() {
                this[this.tabledtJS.CR_JSBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSJBRNull() {
                return this.IsNull(this.tabledtJS.CR_JSJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSJBRNull() {
                this[this.tabledtJS.CR_JSJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSFZRNull() {
                return this.IsNull(this.tabledtJS.CR_JSFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSFZRNull() {
                this[this.tabledtJS.CR_JSFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLBYJNull() {
                return this.IsNull(this.tabledtJS.CR_ZLBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLBYJNull() {
                this[this.tabledtJS.CR_ZLBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLFZRNull() {
                return this.IsNull(this.tabledtJS.CR_ZLFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLFZRNull() {
                this[this.tabledtJS.CR_ZLFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtJS.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtJS.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtJS.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtJS.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtJS.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtJS.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtJS.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtJS.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtFBRow : global::System.Data.DataRow {
            
            private dtFBDataTable tabledtFB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtFBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtFB = ((dtFBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_SCBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCBYJ\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_SCBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_SCJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCJBR\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_SCJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_SCFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_SCFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_SCFZR\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_SCFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_JSBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSBYJ\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_JSBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JSFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_JSFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_JSFZR\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_JSFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_ZLBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLBYJ\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_ZLBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZLFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_ZLFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZLFZR\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_ZLFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtFB.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtFB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtFB.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtFB.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtFB.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtFB.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtFB.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtFB.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtFB.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtFB.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtFB.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCBYJNull() {
                return this.IsNull(this.tabledtFB.CR_SCBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCBYJNull() {
                this[this.tabledtFB.CR_SCBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCJBRNull() {
                return this.IsNull(this.tabledtFB.CR_SCJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCJBRNull() {
                this[this.tabledtFB.CR_SCJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_SCFZRNull() {
                return this.IsNull(this.tabledtFB.CR_SCFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_SCFZRNull() {
                this[this.tabledtFB.CR_SCFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSBYJNull() {
                return this.IsNull(this.tabledtFB.CR_JSBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSBYJNull() {
                this[this.tabledtFB.CR_JSBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_JSFZRNull() {
                return this.IsNull(this.tabledtFB.CR_JSFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_JSFZRNull() {
                this[this.tabledtFB.CR_JSFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLBYJNull() {
                return this.IsNull(this.tabledtFB.CR_ZLBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLBYJNull() {
                this[this.tabledtFB.CR_ZLBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZLFZRNull() {
                return this.IsNull(this.tabledtFB.CR_ZLFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZLFZRNull() {
                this[this.tabledtFB.CR_ZLFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtFB.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtFB.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtFB.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtFB.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtFB.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtFB.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtFB.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtFB.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtQTRow : global::System.Data.DataRow {
            
            private dtQTDataTable tabledtQT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtQTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtQT = ((dtQTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_xmmc {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.cr_xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_xmmc\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.cr_xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_sbmc {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.cr_sbmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_sbmc\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.cr_sbmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbsmc {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.cr_fbsmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbsmc\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.cr_fbsmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cr_fbfw {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.cr_fbfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cr_fbfw\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.cr_fbfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BMYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_BMYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BMYJ\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_BMYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BMJBR {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_BMJBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BMJBR\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_BMJBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_NAME {
                get {
                    return ((string)(this[this.tabledtQT.DEP_NAMEColumn]));
                }
                set {
                    this[this.tabledtQT.DEP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BMFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_BMFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BMFZR\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_BMFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWBYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_CWBYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWBYJ\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_CWBYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWFZR {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_CWFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWFZR\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_CWFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LDYJ {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_LDYJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LDYJ\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_LDYJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tabledtQT.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'dtQT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtQT.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_xmmcNull() {
                return this.IsNull(this.tabledtQT.cr_xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_xmmcNull() {
                this[this.tabledtQT.cr_xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_sbmcNull() {
                return this.IsNull(this.tabledtQT.cr_sbmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_sbmcNull() {
                this[this.tabledtQT.cr_sbmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbsmcNull() {
                return this.IsNull(this.tabledtQT.cr_fbsmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbsmcNull() {
                this[this.tabledtQT.cr_fbsmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscr_fbfwNull() {
                return this.IsNull(this.tabledtQT.cr_fbfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcr_fbfwNull() {
                this[this.tabledtQT.cr_fbfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BMYJNull() {
                return this.IsNull(this.tabledtQT.CR_BMYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BMYJNull() {
                this[this.tabledtQT.CR_BMYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BMJBRNull() {
                return this.IsNull(this.tabledtQT.CR_BMJBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BMJBRNull() {
                this[this.tabledtQT.CR_BMJBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BMFZRNull() {
                return this.IsNull(this.tabledtQT.CR_BMFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BMFZRNull() {
                this[this.tabledtQT.CR_BMFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWBYJNull() {
                return this.IsNull(this.tabledtQT.CR_CWBYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWBYJNull() {
                this[this.tabledtQT.CR_CWBYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWFZRNull() {
                return this.IsNull(this.tabledtQT.CR_CWFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWFZRNull() {
                this[this.tabledtQT.CR_CWFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDYJNull() {
                return this.IsNull(this.tabledtQT.CR_LDYJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDYJNull() {
                this[this.tabledtQT.CR_LDYJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tabledtQT.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tabledtQT.CR_LDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCYRowChangeEvent : global::System.EventArgs {
            
            private dtCYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYRowChangeEvent(dtCYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtXSRowChangeEvent : global::System.EventArgs {
            
            private dtXSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSRowChangeEvent(dtXSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtXSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCGRowChangeEvent : global::System.EventArgs {
            
            private dtCGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGRowChangeEvent(dtCGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtJSRowChangeEvent : global::System.EventArgs {
            
            private dtJSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSRowChangeEvent(dtJSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtJSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtFBRowChangeEvent : global::System.EventArgs {
            
            private dtFBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBRowChangeEvent(dtFBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtFBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtQTRowChangeEvent : global::System.EventArgs {
            
            private dtQTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTRowChangeEvent(dtQTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtQTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ZCZJ_DPF.Contract_Data.Contract_Review_Print.DataSet_CM_CONREVTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtCYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtCYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtCY";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_CYBYJ", "CR_CYBYJ");
            tableMapping.ColumnMappings.Add("CR_CYJBR", "CR_CYJBR");
            tableMapping.ColumnMappings.Add("CR_CYFZR", "CR_CYFZR");
            tableMapping.ColumnMappings.Add("CR_SCBYJ", "CR_SCBYJ");
            tableMapping.ColumnMappings.Add("CR_SCFZR", "CR_SCFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_CYBYJ,b.CR_CYJBR,c.CR_CYFZR,
d.CR_SCBYJ,d.CR_SCFZR,e.CR_CWBYJ,e.CR_CWFZR,f.CR_LDYJ,f. CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_CYBYJ,crd_pidname as CR_CYJBR from View_TBCR_View_Detail where crd_dep='07'
 and crd_pidtype='0')b,
(select cr_id,crd_note as CR_CYBYJ,crd_pidname as CR_CYFZR from View_TBCR_View_Detail where crd_dep='07'
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_SCBYJ,crd_pidname as CR_SCFZR from View_TBCR_View_Detail where crd_dep='04'
 and crd_pidtype='1') d,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') e,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') f 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id and a.cr_id=d.cr_id and a.cr_id=e.cr_id ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtCYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtCYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtCYDataTable dataTable = new DataSet_CM_CONREV.dtCYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtXSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtXSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtXS";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_XSBYJ", "CR_XSBYJ");
            tableMapping.ColumnMappings.Add("CR_XSJBR", "CR_XSJBR");
            tableMapping.ColumnMappings.Add("CR_XSFZR", "CR_XSFZR");
            tableMapping.ColumnMappings.Add("CR_JSBYJ", "CR_JSBYJ");
            tableMapping.ColumnMappings.Add("CR_JSFZR", "CR_JSFZR");
            tableMapping.ColumnMappings.Add("CR_ZLBYJ", "CR_ZLBYJ");
            tableMapping.ColumnMappings.Add("CR_ZLFZR", "CR_ZLFZR");
            tableMapping.ColumnMappings.Add("CR_SCBYJ", "CR_SCBYJ");
            tableMapping.ColumnMappings.Add("CR_SCFZR", "CR_SCFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_XSBYJ,b.CR_XSJBR,c.CR_XSFZR,
d.CR_JSBYJ,d.CR_JSFZR,e.CR_ZLBYJ,e.CR_ZLFZR,
f.CR_SCBYJ,f.CR_SCFZR,g.CR_CWBYJ,g.CR_CWFZR,h.CR_LDYJ,h. CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_XSBYJ,crd_pidname as CR_XSJBR from View_TBCR_View_Detail where crd_dep='12'
 and crd_pidtype='0')b,
(select cr_id,crd_note as CR_XSBYJ,crd_pidname as CR_XSFZR from View_TBCR_View_Detail where crd_dep='12'
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_JSBYJ,crd_pidname as CR_JSFZR from View_TBCR_View_Detail where crd_dep='03'
 and crd_pidtype='1')d,
(select cr_id,crd_note as CR_ZLBYJ,crd_pidname as CR_ZLFZR from View_TBCR_View_Detail where crd_dep='05'
 and crd_pidtype='1')e,
(select cr_id,crd_note as CR_SCBYJ,crd_pidname as CR_SCFZR from View_TBCR_View_Detail where crd_dep='04'
 and crd_pidtype='1') f,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') g,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') h 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id and a.cr_id=d.cr_id and a.cr_id=e.cr_id and a.cr_id=f.cr_id and a.cr_id=g.cr_id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtXSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtXSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtXSDataTable dataTable = new DataSet_CM_CONREV.dtXSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtCGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtCGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtCG";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_CGBYJ", "CR_CGBYJ");
            tableMapping.ColumnMappings.Add("CR_CGJBR", "CR_CGJBR");
            tableMapping.ColumnMappings.Add("CR_CGFZR", "CR_CGFZR");
            tableMapping.ColumnMappings.Add("CR_JSBYJ", "CR_JSBYJ");
            tableMapping.ColumnMappings.Add("CR_JSFZR", "CR_JSFZR");
            tableMapping.ColumnMappings.Add("CR_ZLBYJ", "CR_ZLBYJ");
            tableMapping.ColumnMappings.Add("CR_ZLFZR", "CR_ZLFZR");
            tableMapping.ColumnMappings.Add("CR_SCBYJ", "CR_SCBYJ");
            tableMapping.ColumnMappings.Add("CR_SCFZR", "CR_SCFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_CGBYJ,b.CR_CGJBR,c.CR_CGFZR,
d.CR_JSBYJ,d.CR_JSFZR,e.CR_ZLBYJ,e.CR_ZLFZR,
f.CR_SCBYJ,f.CR_SCFZR,g.CR_CWBYJ,g.CR_CWFZR,h.CR_LDYJ,h. CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_CGBYJ,crd_pidname as CR_CGJBR from View_TBCR_View_Detail where crd_dep='06'
 and crd_pidtype='0')b,
(select cr_id,crd_note as CR_CGBYJ,crd_pidname as CR_CGFZR from View_TBCR_View_Detail where crd_dep='06'
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_JSBYJ,crd_pidname as CR_JSFZR from View_TBCR_View_Detail where crd_dep='03'
 and crd_pidtype='1')d,
(select cr_id,crd_note as CR_ZLBYJ,crd_pidname as CR_ZLFZR from View_TBCR_View_Detail where crd_dep='05'
 and crd_pidtype='1')e,
(select cr_id,crd_note as CR_SCBYJ,crd_pidname as CR_SCFZR from View_TBCR_View_Detail where crd_dep='04'
 and crd_pidtype='1') f,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') g,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') h 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id and a.cr_id=d.cr_id and a.cr_id=e.cr_id and a.cr_id=f.cr_id and a.cr_id=g.cr_id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtCGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtCGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtCGDataTable dataTable = new DataSet_CM_CONREV.dtCGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtJSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtJSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtJS";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_JSBYJ", "CR_JSBYJ");
            tableMapping.ColumnMappings.Add("CR_JSJBR", "CR_JSJBR");
            tableMapping.ColumnMappings.Add("CR_JSFZR", "CR_JSFZR");
            tableMapping.ColumnMappings.Add("CR_ZLBYJ", "CR_ZLBYJ");
            tableMapping.ColumnMappings.Add("CR_ZLFZR", "CR_ZLFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_JSBYJ,b.CR_JSJBR,c.CR_JSFZR,
d.CR_ZLBYJ,d.CR_ZLFZR,
e.CR_CWBYJ,e.CR_CWFZR,f.CR_LDYJ,f. CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_JSBYJ,crd_pidname as CR_JSJBR from View_TBCR_View_Detail where crd_dep='03'
 and crd_pidtype='0')b,
(select cr_id,crd_note as CR_JSBYJ,crd_pidname as CR_JSFZR from View_TBCR_View_Detail where crd_dep='03'
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_ZLBYJ,crd_pidname as CR_ZLFZR from View_TBCR_View_Detail where crd_dep='05'
 and crd_pidtype='1')d,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') e,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') f 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id and a.cr_id=d.cr_id and a.cr_id=e.cr_id ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtJSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtJSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtJSDataTable dataTable = new DataSet_CM_CONREV.dtJSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtFBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtFBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtFB";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_SCBYJ", "CR_SCBYJ");
            tableMapping.ColumnMappings.Add("CR_SCJBR", "CR_SCJBR");
            tableMapping.ColumnMappings.Add("CR_SCFZR", "CR_SCFZR");
            tableMapping.ColumnMappings.Add("CR_JSBYJ", "CR_JSBYJ");
            tableMapping.ColumnMappings.Add("CR_JSFZR", "CR_JSFZR");
            tableMapping.ColumnMappings.Add("CR_ZLBYJ", "CR_ZLBYJ");
            tableMapping.ColumnMappings.Add("CR_ZLFZR", "CR_ZLFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_SCBYJ,b.CR_SCJBR,c.CR_SCFZR,
d.CR_JSBYJ,d.CR_JSFZR,e.CR_ZLBYJ,e.CR_ZLFZR,
g.CR_CWBYJ,g.CR_CWFZR,h.CR_LDYJ,h.CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_SCBYJ,crd_pidname as CR_SCJBR from View_TBCR_View_Detail where crd_dep='04'
 and crd_pidtype='0')b,
(select cr_id,crd_note as CR_SCBYJ,crd_pidname as CR_SCFZR from View_TBCR_View_Detail where crd_dep='04'
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_JSBYJ,crd_pidname as CR_JSFZR from View_TBCR_View_Detail where crd_dep='03'
 and crd_pidtype='1')d,
(select cr_id,crd_note as CR_ZLBYJ,crd_pidname as CR_ZLFZR from View_TBCR_View_Detail where crd_dep='05'
 and crd_pidtype='1')e,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') g,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') h 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id and a.cr_id=d.cr_id and a.cr_id=e.cr_id  and a.cr_id=g.cr_id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtFBDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtFBDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtFBDataTable dataTable = new DataSet_CM_CONREV.dtFBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtQTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtQTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtQT";
            tableMapping.ColumnMappings.Add("cr_xmmc", "cr_xmmc");
            tableMapping.ColumnMappings.Add("cr_sbmc", "cr_sbmc");
            tableMapping.ColumnMappings.Add("cr_fbsmc", "cr_fbsmc");
            tableMapping.ColumnMappings.Add("cr_fbfw", "cr_fbfw");
            tableMapping.ColumnMappings.Add("CR_BMYJ", "CR_BMYJ");
            tableMapping.ColumnMappings.Add("CR_BMJBR", "CR_BMJBR");
            tableMapping.ColumnMappings.Add("DEP_NAME", "DEP_NAME");
            tableMapping.ColumnMappings.Add("CR_BMFZR", "CR_BMFZR");
            tableMapping.ColumnMappings.Add("CR_CWBYJ", "CR_CWBYJ");
            tableMapping.ColumnMappings.Add("CR_CWFZR", "CR_CWFZR");
            tableMapping.ColumnMappings.Add("CR_LDYJ", "CR_LDYJ");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select distinct a.cr_xmmc,a.cr_sbmc,a.cr_fbsmc,a.cr_fbfw,b.CR_BMYJ,b.CR_BMJBR,b.DEP_NAME,c.CR_BMFZR,
e.CR_CWBYJ,e.CR_CWFZR,f.CR_LDYJ,f. CR_LD
from (select cr_id, cr_xmmc,cr_sbmc,cr_fbsmc,cr_fbfw  from View_TBCR_View_Detail ) a,
(select cr_id,crd_note as CR_BMYJ,crd_pidname as CR_BMJBR,DEP_NAME from View_TBCR_View_Detail X,TBDS_DEPINFO Y
 where crd_dep NOT IN ('01','08','13') and crd_pidtype='0' AND X.crd_dep=Y.DEP_CODE)b,
(select cr_id,crd_note as CR_BMYJ,crd_pidname as CR_BMFZR from View_TBCR_View_Detail where crd_dep NOT IN ('01','08','13')
 and crd_pidtype='1')c,
(select cr_id,crd_note as CR_CWBYJ,crd_pidname as CR_CWFZR from View_TBCR_View_Detail where crd_dep='08'
 and crd_pidtype='1') e,
(select top 1 cr_id,crd_note as CR_LDYJ,crd_pidname as CR_LD from View_TBCR_View_Detail where crd_dep='01'
 and crd_pidtype='1') f 
 where a.cr_id=b.cr_id and a.cr_id=c.cr_id  and a.cr_id=e.cr_id ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_CM_CONREV.dtQTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_CM_CONREV.dtQTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_CM_CONREV.dtQTDataTable dataTable = new DataSet_CM_CONREV.dtQTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DataSet_CM_CONREV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DataSet_CM_CONREV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DataSet_CM_CONREV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DataSet_CM_CONREV dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591