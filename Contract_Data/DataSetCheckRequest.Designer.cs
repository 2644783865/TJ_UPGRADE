//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ZCZJ_DPF.Contract_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCheckRequest")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCheckRequest : global::System.Data.DataSet {
        
        private TBPM_CHECKREQUESTDataTable tableTBPM_CHECKREQUEST;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCheckRequest() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCheckRequest(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TBPM_CHECKREQUEST"] != null)) {
                    base.Tables.Add(new TBPM_CHECKREQUESTDataTable(ds.Tables["TBPM_CHECKREQUEST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBPM_CHECKREQUESTDataTable TBPM_CHECKREQUEST {
            get {
                return this.tableTBPM_CHECKREQUEST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCheckRequest cln = ((DataSetCheckRequest)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TBPM_CHECKREQUEST"] != null)) {
                    base.Tables.Add(new TBPM_CHECKREQUESTDataTable(ds.Tables["TBPM_CHECKREQUEST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTBPM_CHECKREQUEST = ((TBPM_CHECKREQUESTDataTable)(base.Tables["TBPM_CHECKREQUEST"]));
            if ((initTable == true)) {
                if ((this.tableTBPM_CHECKREQUEST != null)) {
                    this.tableTBPM_CHECKREQUEST.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCheckRequest";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCheckRequest.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTBPM_CHECKREQUEST = new TBPM_CHECKREQUESTDataTable();
            base.Tables.Add(this.tableTBPM_CHECKREQUEST);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBPM_CHECKREQUEST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCheckRequest ds = new DataSetCheckRequest();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TBPM_CHECKREQUESTRowChangeEventHandler(object sender, TBPM_CHECKREQUESTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBPM_CHECKREQUESTDataTable : global::System.Data.TypedTableBase<TBPM_CHECKREQUESTRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCR_ID;
            
            private global::System.Data.DataColumn columnCR_QKBM;
            
            private global::System.Data.DataColumn columnCR_USE;
            
            private global::System.Data.DataColumn columnCR_HTBH;
            
            private global::System.Data.DataColumn columnCR_DATE;
            
            private global::System.Data.DataColumn columnCR_ZFFS;
            
            private global::System.Data.DataColumn columnCR_PZH;
            
            private global::System.Data.DataColumn columnCR_YFK;
            
            private global::System.Data.DataColumn columnCR_BQYFK;
            
            private global::System.Data.DataColumn columnCR_BQSFK;
            
            private global::System.Data.DataColumn columnCR_BQSFKDX;
            
            private global::System.Data.DataColumn columnCR_YKKHJ;
            
            private global::System.Data.DataColumn columnCR_BQKYFK;
            
            private global::System.Data.DataColumn columnCR_BQKZBJ;
            
            private global::System.Data.DataColumn columnCR_DKSK;
            
            private global::System.Data.DataColumn columnCR_QT;
            
            private global::System.Data.DataColumn columnCR_THKK;
            
            private global::System.Data.DataColumn columnCR_ZGLD;
            
            private global::System.Data.DataColumn columnCR_BMFZR;
            
            private global::System.Data.DataColumn columnCR_YSR;
            
            private global::System.Data.DataColumn columnCR_LD;
            
            private global::System.Data.DataColumn columnCR_CWSH;
            
            private global::System.Data.DataColumn columnCR_JBR;
            
            private global::System.Data.DataColumn columnCR_STATE;
            
            private global::System.Data.DataColumn columnCR_HTLB;
            
            private global::System.Data.DataColumn columnCR_BQYZF;
            
            private global::System.Data.DataColumn columnPCON_BCODE;
            
            private global::System.Data.DataColumn columnPCON_JINE;
            
            private global::System.Data.DataColumn columnPCON_NAME;
            
            private global::System.Data.DataColumn columnPCON_PJID;
            
            private global::System.Data.DataColumn columnPCON_PJNAME;
            
            private global::System.Data.DataColumn columnPCON_RSPDEPID;
            
            private global::System.Data.DataColumn columnPCON_ENGID;
            
            private global::System.Data.DataColumn columnPCON_ENGNAME;
            
            private global::System.Data.DataColumn columnPCON_TYPE;
            
            private global::System.Data.DataColumn columnPCON_ENGTYPE;
            
            private global::System.Data.DataColumn columnPCON_MONUNIT;
            
            private global::System.Data.DataColumn columnPCON_FILLDATE;
            
            private global::System.Data.DataColumn columnPCON_VALIDDATE;
            
            private global::System.Data.DataColumn columnPCON_CUSTMNAME;
            
            private global::System.Data.DataColumn columnPCON_CUSTMID;
            
            private global::System.Data.DataColumn columnPCON_ARCHVDATE;
            
            private global::System.Data.DataColumn columnPCON_ADUITDATE;
            
            private global::System.Data.DataColumn columnPCON_CONTEXT;
            
            private global::System.Data.DataColumn columnPCON_RESPONSER;
            
            private global::System.Data.DataColumn columnCR_DEPOSITBANK;
            
            private global::System.Data.DataColumn columnCR_BANKACUNUM;
            
            private global::System.Data.DataColumn columnPCON_PHONENUM;
            
            private global::System.Data.DataColumn columnPCON_DELIVERYDATE;
            
            private global::System.Data.DataColumn columnPCON_COST;
            
            private global::System.Data.DataColumn columnPCON_NOTE;
            
            private global::System.Data.DataColumn columnPCON_FORM;
            
            private global::System.Data.DataColumn columnPCON_STATE;
            
            private global::System.Data.DataColumn columnPCON_YFK;
            
            private global::System.Data.DataColumn columnPCON_YFKLJ;
            
            private global::System.Data.DataColumn columnPCON_SFKLJ;
            
            private global::System.Data.DataColumn columnPCON_YFWK;
            
            private global::System.Data.DataColumn columnPCON_ERROR;
            
            private global::System.Data.DataColumn columnPCON_SPJE;
            
            private global::System.Data.DataColumn columnPCON_JECHG;
            
            private global::System.Data.DataColumn columnPCON_QTCHG;
            
            private global::System.Data.DataColumn columnPCON_FHSJ;
            
            private global::System.Data.DataColumn columnPCON_YZHTH;
            
            private global::System.Data.DataColumn columnDEP_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTDataTable() {
                this.TableName = "TBPM_CHECKREQUEST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBPM_CHECKREQUESTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBPM_CHECKREQUESTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_IDColumn {
                get {
                    return this.columnCR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_QKBMColumn {
                get {
                    return this.columnCR_QKBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_USEColumn {
                get {
                    return this.columnCR_USE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_HTBHColumn {
                get {
                    return this.columnCR_HTBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_DATEColumn {
                get {
                    return this.columnCR_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZFFSColumn {
                get {
                    return this.columnCR_ZFFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_PZHColumn {
                get {
                    return this.columnCR_PZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_YFKColumn {
                get {
                    return this.columnCR_YFK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQYFKColumn {
                get {
                    return this.columnCR_BQYFK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQSFKColumn {
                get {
                    return this.columnCR_BQSFK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQSFKDXColumn {
                get {
                    return this.columnCR_BQSFKDX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_YKKHJColumn {
                get {
                    return this.columnCR_YKKHJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQKYFKColumn {
                get {
                    return this.columnCR_BQKYFK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQKZBJColumn {
                get {
                    return this.columnCR_BQKZBJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_DKSKColumn {
                get {
                    return this.columnCR_DKSK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_QTColumn {
                get {
                    return this.columnCR_QT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_THKKColumn {
                get {
                    return this.columnCR_THKK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_ZGLDColumn {
                get {
                    return this.columnCR_ZGLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BMFZRColumn {
                get {
                    return this.columnCR_BMFZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_YSRColumn {
                get {
                    return this.columnCR_YSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_LDColumn {
                get {
                    return this.columnCR_LD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_CWSHColumn {
                get {
                    return this.columnCR_CWSH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_JBRColumn {
                get {
                    return this.columnCR_JBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_STATEColumn {
                get {
                    return this.columnCR_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_HTLBColumn {
                get {
                    return this.columnCR_HTLB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BQYZFColumn {
                get {
                    return this.columnCR_BQYZF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_BCODEColumn {
                get {
                    return this.columnPCON_BCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_JINEColumn {
                get {
                    return this.columnPCON_JINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_NAMEColumn {
                get {
                    return this.columnPCON_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_PJIDColumn {
                get {
                    return this.columnPCON_PJID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_PJNAMEColumn {
                get {
                    return this.columnPCON_PJNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_RSPDEPIDColumn {
                get {
                    return this.columnPCON_RSPDEPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ENGIDColumn {
                get {
                    return this.columnPCON_ENGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ENGNAMEColumn {
                get {
                    return this.columnPCON_ENGNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_TYPEColumn {
                get {
                    return this.columnPCON_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ENGTYPEColumn {
                get {
                    return this.columnPCON_ENGTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_MONUNITColumn {
                get {
                    return this.columnPCON_MONUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_FILLDATEColumn {
                get {
                    return this.columnPCON_FILLDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_VALIDDATEColumn {
                get {
                    return this.columnPCON_VALIDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_CUSTMNAMEColumn {
                get {
                    return this.columnPCON_CUSTMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_CUSTMIDColumn {
                get {
                    return this.columnPCON_CUSTMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ARCHVDATEColumn {
                get {
                    return this.columnPCON_ARCHVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ADUITDATEColumn {
                get {
                    return this.columnPCON_ADUITDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_CONTEXTColumn {
                get {
                    return this.columnPCON_CONTEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_RESPONSERColumn {
                get {
                    return this.columnPCON_RESPONSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_DEPOSITBANKColumn {
                get {
                    return this.columnCR_DEPOSITBANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CR_BANKACUNUMColumn {
                get {
                    return this.columnCR_BANKACUNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_PHONENUMColumn {
                get {
                    return this.columnPCON_PHONENUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_DELIVERYDATEColumn {
                get {
                    return this.columnPCON_DELIVERYDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_COSTColumn {
                get {
                    return this.columnPCON_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_NOTEColumn {
                get {
                    return this.columnPCON_NOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_FORMColumn {
                get {
                    return this.columnPCON_FORM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_STATEColumn {
                get {
                    return this.columnPCON_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_YFKColumn {
                get {
                    return this.columnPCON_YFK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_YFKLJColumn {
                get {
                    return this.columnPCON_YFKLJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_SFKLJColumn {
                get {
                    return this.columnPCON_SFKLJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_YFWKColumn {
                get {
                    return this.columnPCON_YFWK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_ERRORColumn {
                get {
                    return this.columnPCON_ERROR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_SPJEColumn {
                get {
                    return this.columnPCON_SPJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_JECHGColumn {
                get {
                    return this.columnPCON_JECHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_QTCHGColumn {
                get {
                    return this.columnPCON_QTCHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_FHSJColumn {
                get {
                    return this.columnPCON_FHSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCON_YZHTHColumn {
                get {
                    return this.columnPCON_YZHTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEP_NAMEColumn {
                get {
                    return this.columnDEP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTRow this[int index] {
                get {
                    return ((TBPM_CHECKREQUESTRow)(this.Rows[index]));
                }
            }
            
            public event TBPM_CHECKREQUESTRowChangeEventHandler TBPM_CHECKREQUESTRowChanging;
            
            public event TBPM_CHECKREQUESTRowChangeEventHandler TBPM_CHECKREQUESTRowChanged;
            
            public event TBPM_CHECKREQUESTRowChangeEventHandler TBPM_CHECKREQUESTRowDeleting;
            
            public event TBPM_CHECKREQUESTRowChangeEventHandler TBPM_CHECKREQUESTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBPM_CHECKREQUESTRow(TBPM_CHECKREQUESTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTRow AddTBPM_CHECKREQUESTRow(
                        string CR_ID, 
                        string CR_QKBM, 
                        string CR_USE, 
                        string CR_HTBH, 
                        System.DateTime CR_DATE, 
                        string CR_ZFFS, 
                        string CR_PZH, 
                        decimal CR_YFK, 
                        decimal CR_BQYFK, 
                        decimal CR_BQSFK, 
                        string CR_BQSFKDX, 
                        decimal CR_YKKHJ, 
                        decimal CR_BQKYFK, 
                        decimal CR_BQKZBJ, 
                        decimal CR_DKSK, 
                        decimal CR_QT, 
                        decimal CR_THKK, 
                        string CR_ZGLD, 
                        string CR_BMFZR, 
                        string CR_YSR, 
                        string CR_LD, 
                        string CR_CWSH, 
                        string CR_JBR, 
                        int CR_STATE, 
                        string CR_HTLB, 
                        decimal CR_BQYZF, 
                        string PCON_BCODE, 
                        decimal PCON_JINE, 
                        string PCON_NAME, 
                        string PCON_PJID, 
                        string PCON_PJNAME, 
                        string PCON_RSPDEPID, 
                        string PCON_ENGID, 
                        string PCON_ENGNAME, 
                        string PCON_TYPE, 
                        string PCON_ENGTYPE, 
                        string PCON_MONUNIT, 
                        string PCON_FILLDATE, 
                        string PCON_VALIDDATE, 
                        string PCON_CUSTMNAME, 
                        string PCON_CUSTMID, 
                        string PCON_ARCHVDATE, 
                        string PCON_ADUITDATE, 
                        string PCON_CONTEXT, 
                        string PCON_RESPONSER, 
                        string CR_DEPOSITBANK, 
                        string CR_BANKACUNUM, 
                        string PCON_PHONENUM, 
                        string PCON_DELIVERYDATE, 
                        string PCON_COST, 
                        string PCON_NOTE, 
                        string PCON_FORM, 
                        int PCON_STATE, 
                        decimal PCON_YFK, 
                        decimal PCON_YFKLJ, 
                        decimal PCON_SFKLJ, 
                        decimal PCON_YFWK, 
                        int PCON_ERROR, 
                        decimal PCON_SPJE, 
                        int PCON_JECHG, 
                        int PCON_QTCHG, 
                        string PCON_FHSJ, 
                        string PCON_YZHTH, 
                        string DEP_NAME) {
                TBPM_CHECKREQUESTRow rowTBPM_CHECKREQUESTRow = ((TBPM_CHECKREQUESTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CR_ID,
                        CR_QKBM,
                        CR_USE,
                        CR_HTBH,
                        CR_DATE,
                        CR_ZFFS,
                        CR_PZH,
                        CR_YFK,
                        CR_BQYFK,
                        CR_BQSFK,
                        CR_BQSFKDX,
                        CR_YKKHJ,
                        CR_BQKYFK,
                        CR_BQKZBJ,
                        CR_DKSK,
                        CR_QT,
                        CR_THKK,
                        CR_ZGLD,
                        CR_BMFZR,
                        CR_YSR,
                        CR_LD,
                        CR_CWSH,
                        CR_JBR,
                        CR_STATE,
                        CR_HTLB,
                        CR_BQYZF,
                        PCON_BCODE,
                        PCON_JINE,
                        PCON_NAME,
                        PCON_PJID,
                        PCON_PJNAME,
                        PCON_RSPDEPID,
                        PCON_ENGID,
                        PCON_ENGNAME,
                        PCON_TYPE,
                        PCON_ENGTYPE,
                        PCON_MONUNIT,
                        PCON_FILLDATE,
                        PCON_VALIDDATE,
                        PCON_CUSTMNAME,
                        PCON_CUSTMID,
                        PCON_ARCHVDATE,
                        PCON_ADUITDATE,
                        PCON_CONTEXT,
                        PCON_RESPONSER,
                        CR_DEPOSITBANK,
                        CR_BANKACUNUM,
                        PCON_PHONENUM,
                        PCON_DELIVERYDATE,
                        PCON_COST,
                        PCON_NOTE,
                        PCON_FORM,
                        PCON_STATE,
                        PCON_YFK,
                        PCON_YFKLJ,
                        PCON_SFKLJ,
                        PCON_YFWK,
                        PCON_ERROR,
                        PCON_SPJE,
                        PCON_JECHG,
                        PCON_QTCHG,
                        PCON_FHSJ,
                        PCON_YZHTH,
                        DEP_NAME};
                rowTBPM_CHECKREQUESTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBPM_CHECKREQUESTRow);
                return rowTBPM_CHECKREQUESTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TBPM_CHECKREQUESTDataTable cln = ((TBPM_CHECKREQUESTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBPM_CHECKREQUESTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCR_ID = base.Columns["CR_ID"];
                this.columnCR_QKBM = base.Columns["CR_QKBM"];
                this.columnCR_USE = base.Columns["CR_USE"];
                this.columnCR_HTBH = base.Columns["CR_HTBH"];
                this.columnCR_DATE = base.Columns["CR_DATE"];
                this.columnCR_ZFFS = base.Columns["CR_ZFFS"];
                this.columnCR_PZH = base.Columns["CR_PZH"];
                this.columnCR_YFK = base.Columns["CR_YFK"];
                this.columnCR_BQYFK = base.Columns["CR_BQYFK"];
                this.columnCR_BQSFK = base.Columns["CR_BQSFK"];
                this.columnCR_BQSFKDX = base.Columns["CR_BQSFKDX"];
                this.columnCR_YKKHJ = base.Columns["CR_YKKHJ"];
                this.columnCR_BQKYFK = base.Columns["CR_BQKYFK"];
                this.columnCR_BQKZBJ = base.Columns["CR_BQKZBJ"];
                this.columnCR_DKSK = base.Columns["CR_DKSK"];
                this.columnCR_QT = base.Columns["CR_QT"];
                this.columnCR_THKK = base.Columns["CR_THKK"];
                this.columnCR_ZGLD = base.Columns["CR_ZGLD"];
                this.columnCR_BMFZR = base.Columns["CR_BMFZR"];
                this.columnCR_YSR = base.Columns["CR_YSR"];
                this.columnCR_LD = base.Columns["CR_LD"];
                this.columnCR_CWSH = base.Columns["CR_CWSH"];
                this.columnCR_JBR = base.Columns["CR_JBR"];
                this.columnCR_STATE = base.Columns["CR_STATE"];
                this.columnCR_HTLB = base.Columns["CR_HTLB"];
                this.columnCR_BQYZF = base.Columns["CR_BQYZF"];
                this.columnPCON_BCODE = base.Columns["PCON_BCODE"];
                this.columnPCON_JINE = base.Columns["PCON_JINE"];
                this.columnPCON_NAME = base.Columns["PCON_NAME"];
                this.columnPCON_PJID = base.Columns["PCON_PJID"];
                this.columnPCON_PJNAME = base.Columns["PCON_PJNAME"];
                this.columnPCON_RSPDEPID = base.Columns["PCON_RSPDEPID"];
                this.columnPCON_ENGID = base.Columns["PCON_ENGID"];
                this.columnPCON_ENGNAME = base.Columns["PCON_ENGNAME"];
                this.columnPCON_TYPE = base.Columns["PCON_TYPE"];
                this.columnPCON_ENGTYPE = base.Columns["PCON_ENGTYPE"];
                this.columnPCON_MONUNIT = base.Columns["PCON_MONUNIT"];
                this.columnPCON_FILLDATE = base.Columns["PCON_FILLDATE"];
                this.columnPCON_VALIDDATE = base.Columns["PCON_VALIDDATE"];
                this.columnPCON_CUSTMNAME = base.Columns["PCON_CUSTMNAME"];
                this.columnPCON_CUSTMID = base.Columns["PCON_CUSTMID"];
                this.columnPCON_ARCHVDATE = base.Columns["PCON_ARCHVDATE"];
                this.columnPCON_ADUITDATE = base.Columns["PCON_ADUITDATE"];
                this.columnPCON_CONTEXT = base.Columns["PCON_CONTEXT"];
                this.columnPCON_RESPONSER = base.Columns["PCON_RESPONSER"];
                this.columnCR_DEPOSITBANK = base.Columns["CR_DEPOSITBANK"];
                this.columnCR_BANKACUNUM = base.Columns["CR_BANKACUNUM"];
                this.columnPCON_PHONENUM = base.Columns["PCON_PHONENUM"];
                this.columnPCON_DELIVERYDATE = base.Columns["PCON_DELIVERYDATE"];
                this.columnPCON_COST = base.Columns["PCON_COST"];
                this.columnPCON_NOTE = base.Columns["PCON_NOTE"];
                this.columnPCON_FORM = base.Columns["PCON_FORM"];
                this.columnPCON_STATE = base.Columns["PCON_STATE"];
                this.columnPCON_YFK = base.Columns["PCON_YFK"];
                this.columnPCON_YFKLJ = base.Columns["PCON_YFKLJ"];
                this.columnPCON_SFKLJ = base.Columns["PCON_SFKLJ"];
                this.columnPCON_YFWK = base.Columns["PCON_YFWK"];
                this.columnPCON_ERROR = base.Columns["PCON_ERROR"];
                this.columnPCON_SPJE = base.Columns["PCON_SPJE"];
                this.columnPCON_JECHG = base.Columns["PCON_JECHG"];
                this.columnPCON_QTCHG = base.Columns["PCON_QTCHG"];
                this.columnPCON_FHSJ = base.Columns["PCON_FHSJ"];
                this.columnPCON_YZHTH = base.Columns["PCON_YZHTH"];
                this.columnDEP_NAME = base.Columns["DEP_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCR_ID = new global::System.Data.DataColumn("CR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ID);
                this.columnCR_QKBM = new global::System.Data.DataColumn("CR_QKBM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_QKBM);
                this.columnCR_USE = new global::System.Data.DataColumn("CR_USE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_USE);
                this.columnCR_HTBH = new global::System.Data.DataColumn("CR_HTBH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_HTBH);
                this.columnCR_DATE = new global::System.Data.DataColumn("CR_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_DATE);
                this.columnCR_ZFFS = new global::System.Data.DataColumn("CR_ZFFS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZFFS);
                this.columnCR_PZH = new global::System.Data.DataColumn("CR_PZH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_PZH);
                this.columnCR_YFK = new global::System.Data.DataColumn("CR_YFK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_YFK);
                this.columnCR_BQYFK = new global::System.Data.DataColumn("CR_BQYFK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQYFK);
                this.columnCR_BQSFK = new global::System.Data.DataColumn("CR_BQSFK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQSFK);
                this.columnCR_BQSFKDX = new global::System.Data.DataColumn("CR_BQSFKDX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQSFKDX);
                this.columnCR_YKKHJ = new global::System.Data.DataColumn("CR_YKKHJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_YKKHJ);
                this.columnCR_BQKYFK = new global::System.Data.DataColumn("CR_BQKYFK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQKYFK);
                this.columnCR_BQKZBJ = new global::System.Data.DataColumn("CR_BQKZBJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQKZBJ);
                this.columnCR_DKSK = new global::System.Data.DataColumn("CR_DKSK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_DKSK);
                this.columnCR_QT = new global::System.Data.DataColumn("CR_QT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_QT);
                this.columnCR_THKK = new global::System.Data.DataColumn("CR_THKK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_THKK);
                this.columnCR_ZGLD = new global::System.Data.DataColumn("CR_ZGLD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ZGLD);
                this.columnCR_BMFZR = new global::System.Data.DataColumn("CR_BMFZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BMFZR);
                this.columnCR_YSR = new global::System.Data.DataColumn("CR_YSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_YSR);
                this.columnCR_LD = new global::System.Data.DataColumn("CR_LD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_LD);
                this.columnCR_CWSH = new global::System.Data.DataColumn("CR_CWSH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_CWSH);
                this.columnCR_JBR = new global::System.Data.DataColumn("CR_JBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_JBR);
                this.columnCR_STATE = new global::System.Data.DataColumn("CR_STATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_STATE);
                this.columnCR_HTLB = new global::System.Data.DataColumn("CR_HTLB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_HTLB);
                this.columnCR_BQYZF = new global::System.Data.DataColumn("CR_BQYZF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BQYZF);
                this.columnPCON_BCODE = new global::System.Data.DataColumn("PCON_BCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_BCODE);
                this.columnPCON_JINE = new global::System.Data.DataColumn("PCON_JINE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_JINE);
                this.columnPCON_NAME = new global::System.Data.DataColumn("PCON_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_NAME);
                this.columnPCON_PJID = new global::System.Data.DataColumn("PCON_PJID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_PJID);
                this.columnPCON_PJNAME = new global::System.Data.DataColumn("PCON_PJNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_PJNAME);
                this.columnPCON_RSPDEPID = new global::System.Data.DataColumn("PCON_RSPDEPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_RSPDEPID);
                this.columnPCON_ENGID = new global::System.Data.DataColumn("PCON_ENGID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ENGID);
                this.columnPCON_ENGNAME = new global::System.Data.DataColumn("PCON_ENGNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ENGNAME);
                this.columnPCON_TYPE = new global::System.Data.DataColumn("PCON_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_TYPE);
                this.columnPCON_ENGTYPE = new global::System.Data.DataColumn("PCON_ENGTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ENGTYPE);
                this.columnPCON_MONUNIT = new global::System.Data.DataColumn("PCON_MONUNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_MONUNIT);
                this.columnPCON_FILLDATE = new global::System.Data.DataColumn("PCON_FILLDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_FILLDATE);
                this.columnPCON_VALIDDATE = new global::System.Data.DataColumn("PCON_VALIDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_VALIDDATE);
                this.columnPCON_CUSTMNAME = new global::System.Data.DataColumn("PCON_CUSTMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_CUSTMNAME);
                this.columnPCON_CUSTMID = new global::System.Data.DataColumn("PCON_CUSTMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_CUSTMID);
                this.columnPCON_ARCHVDATE = new global::System.Data.DataColumn("PCON_ARCHVDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ARCHVDATE);
                this.columnPCON_ADUITDATE = new global::System.Data.DataColumn("PCON_ADUITDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ADUITDATE);
                this.columnPCON_CONTEXT = new global::System.Data.DataColumn("PCON_CONTEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_CONTEXT);
                this.columnPCON_RESPONSER = new global::System.Data.DataColumn("PCON_RESPONSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_RESPONSER);
                this.columnCR_DEPOSITBANK = new global::System.Data.DataColumn("CR_DEPOSITBANK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_DEPOSITBANK);
                this.columnCR_BANKACUNUM = new global::System.Data.DataColumn("CR_BANKACUNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_BANKACUNUM);
                this.columnPCON_PHONENUM = new global::System.Data.DataColumn("PCON_PHONENUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_PHONENUM);
                this.columnPCON_DELIVERYDATE = new global::System.Data.DataColumn("PCON_DELIVERYDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_DELIVERYDATE);
                this.columnPCON_COST = new global::System.Data.DataColumn("PCON_COST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_COST);
                this.columnPCON_NOTE = new global::System.Data.DataColumn("PCON_NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_NOTE);
                this.columnPCON_FORM = new global::System.Data.DataColumn("PCON_FORM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_FORM);
                this.columnPCON_STATE = new global::System.Data.DataColumn("PCON_STATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_STATE);
                this.columnPCON_YFK = new global::System.Data.DataColumn("PCON_YFK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_YFK);
                this.columnPCON_YFKLJ = new global::System.Data.DataColumn("PCON_YFKLJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_YFKLJ);
                this.columnPCON_SFKLJ = new global::System.Data.DataColumn("PCON_SFKLJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_SFKLJ);
                this.columnPCON_YFWK = new global::System.Data.DataColumn("PCON_YFWK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_YFWK);
                this.columnPCON_ERROR = new global::System.Data.DataColumn("PCON_ERROR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_ERROR);
                this.columnPCON_SPJE = new global::System.Data.DataColumn("PCON_SPJE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_SPJE);
                this.columnPCON_JECHG = new global::System.Data.DataColumn("PCON_JECHG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_JECHG);
                this.columnPCON_QTCHG = new global::System.Data.DataColumn("PCON_QTCHG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_QTCHG);
                this.columnPCON_FHSJ = new global::System.Data.DataColumn("PCON_FHSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_FHSJ);
                this.columnPCON_YZHTH = new global::System.Data.DataColumn("PCON_YZHTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCON_YZHTH);
                this.columnDEP_NAME = new global::System.Data.DataColumn("DEP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_NAME);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnCR_ID.AllowDBNull = false;
                this.columnCR_ID.MaxLength = 50;
                this.columnCR_QKBM.AllowDBNull = false;
                this.columnCR_QKBM.MaxLength = 50;
                this.columnCR_USE.AllowDBNull = false;
                this.columnCR_USE.MaxLength = 50;
                this.columnCR_HTBH.AllowDBNull = false;
                this.columnCR_HTBH.MaxLength = 50;
                this.columnCR_DATE.AllowDBNull = false;
                this.columnCR_ZFFS.AllowDBNull = false;
                this.columnCR_ZFFS.MaxLength = 50;
                this.columnCR_PZH.MaxLength = 50;
                this.columnCR_YFK.AllowDBNull = false;
                this.columnCR_BQYFK.AllowDBNull = false;
                this.columnCR_BQSFK.AllowDBNull = false;
                this.columnCR_BQSFKDX.AllowDBNull = false;
                this.columnCR_BQSFKDX.MaxLength = 100;
                this.columnCR_ZGLD.MaxLength = 10;
                this.columnCR_BMFZR.MaxLength = 10;
                this.columnCR_YSR.MaxLength = 10;
                this.columnCR_LD.MaxLength = 10;
                this.columnCR_CWSH.MaxLength = 10;
                this.columnCR_JBR.AllowDBNull = false;
                this.columnCR_JBR.MaxLength = 10;
                this.columnCR_STATE.AllowDBNull = false;
                this.columnCR_HTLB.AllowDBNull = false;
                this.columnCR_HTLB.MaxLength = 50;
                this.columnPCON_BCODE.AllowDBNull = false;
                this.columnPCON_BCODE.MaxLength = 50;
                this.columnPCON_JINE.ReadOnly = true;
                this.columnPCON_NAME.AllowDBNull = false;
                this.columnPCON_NAME.MaxLength = 50;
                this.columnPCON_PJID.AllowDBNull = false;
                this.columnPCON_PJID.MaxLength = 50;
                this.columnPCON_PJNAME.AllowDBNull = false;
                this.columnPCON_PJNAME.MaxLength = 100;
                this.columnPCON_RSPDEPID.MaxLength = 10;
                this.columnPCON_ENGID.MaxLength = 100;
                this.columnPCON_ENGNAME.AllowDBNull = false;
                this.columnPCON_ENGNAME.MaxLength = 200;
                this.columnPCON_TYPE.AllowDBNull = false;
                this.columnPCON_TYPE.MaxLength = 50;
                this.columnPCON_ENGTYPE.MaxLength = 50;
                this.columnPCON_MONUNIT.ReadOnly = true;
                this.columnPCON_MONUNIT.MaxLength = 6;
                this.columnPCON_FILLDATE.MaxLength = 50;
                this.columnPCON_VALIDDATE.MaxLength = 50;
                this.columnPCON_CUSTMNAME.MaxLength = 100;
                this.columnPCON_CUSTMID.MaxLength = 10;
                this.columnPCON_ARCHVDATE.MaxLength = 50;
                this.columnPCON_ADUITDATE.MaxLength = 50;
                this.columnPCON_CONTEXT.MaxLength = 50;
                this.columnPCON_RESPONSER.MaxLength = 10;
                this.columnCR_DEPOSITBANK.MaxLength = 50;
                this.columnCR_BANKACUNUM.MaxLength = 50;
                this.columnPCON_PHONENUM.MaxLength = 50;
                this.columnPCON_DELIVERYDATE.MaxLength = 50;
                this.columnPCON_COST.MaxLength = 50;
                this.columnPCON_NOTE.MaxLength = 500;
                this.columnPCON_FORM.AllowDBNull = false;
                this.columnPCON_FORM.MaxLength = 50;
                this.columnPCON_STATE.AllowDBNull = false;
                this.columnPCON_JECHG.AllowDBNull = false;
                this.columnPCON_QTCHG.AllowDBNull = false;
                this.columnPCON_FHSJ.MaxLength = 50;
                this.columnPCON_YZHTH.MaxLength = 50;
                this.columnDEP_NAME.AllowDBNull = false;
                this.columnDEP_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTRow NewTBPM_CHECKREQUESTRow() {
                return ((TBPM_CHECKREQUESTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBPM_CHECKREQUESTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TBPM_CHECKREQUESTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBPM_CHECKREQUESTRowChanged != null)) {
                    this.TBPM_CHECKREQUESTRowChanged(this, new TBPM_CHECKREQUESTRowChangeEvent(((TBPM_CHECKREQUESTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBPM_CHECKREQUESTRowChanging != null)) {
                    this.TBPM_CHECKREQUESTRowChanging(this, new TBPM_CHECKREQUESTRowChangeEvent(((TBPM_CHECKREQUESTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBPM_CHECKREQUESTRowDeleted != null)) {
                    this.TBPM_CHECKREQUESTRowDeleted(this, new TBPM_CHECKREQUESTRowChangeEvent(((TBPM_CHECKREQUESTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBPM_CHECKREQUESTRowDeleting != null)) {
                    this.TBPM_CHECKREQUESTRowDeleting(this, new TBPM_CHECKREQUESTRowChangeEvent(((TBPM_CHECKREQUESTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBPM_CHECKREQUESTRow(TBPM_CHECKREQUESTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCheckRequest ds = new DataSetCheckRequest();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBPM_CHECKREQUESTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TBPM_CHECKREQUESTRow : global::System.Data.DataRow {
            
            private TBPM_CHECKREQUESTDataTable tableTBPM_CHECKREQUEST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBPM_CHECKREQUESTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBPM_CHECKREQUEST = ((TBPM_CHECKREQUESTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableTBPM_CHECKREQUEST.IDColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ID {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_IDColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_QKBM {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_QKBMColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_QKBMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_USE {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_USEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_USEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_HTBH {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_HTBHColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_HTBHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CR_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBPM_CHECKREQUEST.CR_DATEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZFFS {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_ZFFSColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_ZFFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_PZH {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_PZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_PZH\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_PZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_YFK {
                get {
                    return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_YFKColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_YFKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_BQYFK {
                get {
                    return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_BQYFKColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQYFKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_BQSFK {
                get {
                    return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_BQSFKColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQSFKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BQSFKDX {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_BQSFKDXColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQSFKDXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_YKKHJ {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_YKKHJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_YKKHJ\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_YKKHJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_BQKYFK {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_BQKYFKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BQKYFK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQKYFKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_BQKZBJ {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_BQKZBJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BQKZBJ\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQKZBJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_DKSK {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_DKSKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_DKSK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_DKSKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_QT {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_QTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_QT\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_QTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_THKK {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_THKKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_THKK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_THKKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_ZGLD {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_ZGLDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_ZGLD\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_ZGLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BMFZR {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_BMFZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BMFZR\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BMFZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_YSR {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_YSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_YSR\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_YSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_LD {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_LDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_LD\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_LDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_CWSH {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_CWSHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_CWSH\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_CWSHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_JBR {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_JBRColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_JBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CR_STATE {
                get {
                    return ((int)(this[this.tableTBPM_CHECKREQUEST.CR_STATEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_HTLB {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_HTLBColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_HTLBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR_BQYZF {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.CR_BQYZFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BQYZF\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BQYZFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_BCODE {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_BCODEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_BCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_JINE {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_JINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_JINE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_JINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_NAME {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_NAMEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_PJID {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_PJIDColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_PJIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_PJNAME {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_PJNAMEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_PJNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_RSPDEPID {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_RSPDEPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_RSPDEPID\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_RSPDEPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_ENGID {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_ENGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_ENGID\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ENGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_ENGNAME {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_ENGNAMEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ENGNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_TYPE {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_TYPEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_ENGTYPE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_ENGTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_ENGTYPE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ENGTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_MONUNIT {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_MONUNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_MONUNIT\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_MONUNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_FILLDATE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_FILLDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_FILLDATE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_FILLDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_VALIDDATE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_VALIDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_VALIDDATE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_VALIDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_CUSTMNAME {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_CUSTMNAME\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_CUSTMID {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_CUSTMID\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_ARCHVDATE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_ARCHVDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_ARCHVDATE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ARCHVDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_ADUITDATE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_ADUITDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_ADUITDATE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ADUITDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_CONTEXT {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_CONTEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_CONTEXT\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_CONTEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_RESPONSER {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_RESPONSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_RESPONSER\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_RESPONSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_DEPOSITBANK {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_DEPOSITBANKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_DEPOSITBANK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_DEPOSITBANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR_BANKACUNUM {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.CR_BANKACUNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CR_BANKACUNUM\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.CR_BANKACUNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_PHONENUM {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_PHONENUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_PHONENUM\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_PHONENUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_DELIVERYDATE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_DELIVERYDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_DELIVERYDATE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_DELIVERYDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_COST {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_COST\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_NOTE {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_NOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_NOTE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_FORM {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_FORMColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_FORMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCON_STATE {
                get {
                    return ((int)(this[this.tableTBPM_CHECKREQUEST.PCON_STATEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_YFK {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_YFKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_YFK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_YFKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_YFKLJ {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_YFKLJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_YFKLJ\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_YFKLJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_SFKLJ {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_SFKLJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_SFKLJ\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_SFKLJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_YFWK {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_YFWKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_YFWK\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_YFWKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCON_ERROR {
                get {
                    try {
                        return ((int)(this[this.tableTBPM_CHECKREQUEST.PCON_ERRORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_ERROR\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_ERRORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCON_SPJE {
                get {
                    try {
                        return ((decimal)(this[this.tableTBPM_CHECKREQUEST.PCON_SPJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_SPJE\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_SPJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCON_JECHG {
                get {
                    return ((int)(this[this.tableTBPM_CHECKREQUEST.PCON_JECHGColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_JECHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCON_QTCHG {
                get {
                    return ((int)(this[this.tableTBPM_CHECKREQUEST.PCON_QTCHGColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_QTCHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_FHSJ {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_FHSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_FHSJ\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_FHSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCON_YZHTH {
                get {
                    try {
                        return ((string)(this[this.tableTBPM_CHECKREQUEST.PCON_YZHTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCON_YZHTH\' in table \'TBPM_CHECKREQUEST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.PCON_YZHTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_NAME {
                get {
                    return ((string)(this[this.tableTBPM_CHECKREQUEST.DEP_NAMEColumn]));
                }
                set {
                    this[this.tableTBPM_CHECKREQUEST.DEP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_PZHNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_PZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_PZHNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_PZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_YKKHJNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_YKKHJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_YKKHJNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_YKKHJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BQKYFKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_BQKYFKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BQKYFKNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_BQKYFKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BQKZBJNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_BQKZBJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BQKZBJNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_BQKZBJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_DKSKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_DKSKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_DKSKNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_DKSKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_QTNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_QTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_QTNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_QTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_THKKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_THKKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_THKKNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_THKKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_ZGLDNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_ZGLDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_ZGLDNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_ZGLDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BMFZRNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_BMFZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BMFZRNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_BMFZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_YSRNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_YSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_YSRNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_YSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_LDNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_LDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_LDNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_LDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_CWSHNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_CWSHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_CWSHNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_CWSHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BQYZFNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_BQYZFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BQYZFNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_BQYZFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_JINENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_JINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_JINENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_JINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_RSPDEPIDNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_RSPDEPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_RSPDEPIDNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_RSPDEPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_ENGIDNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_ENGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_ENGIDNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_ENGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_ENGTYPENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_ENGTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_ENGTYPENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_ENGTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_MONUNITNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_MONUNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_MONUNITNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_MONUNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_FILLDATENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_FILLDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_FILLDATENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_FILLDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_VALIDDATENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_VALIDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_VALIDDATENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_VALIDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_CUSTMNAMENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_CUSTMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_CUSTMNAMENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_CUSTMIDNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_CUSTMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_CUSTMIDNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_CUSTMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_ARCHVDATENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_ARCHVDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_ARCHVDATENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_ARCHVDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_ADUITDATENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_ADUITDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_ADUITDATENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_ADUITDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_CONTEXTNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_CONTEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_CONTEXTNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_CONTEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_RESPONSERNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_RESPONSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_RESPONSERNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_RESPONSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_DEPOSITBANKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_DEPOSITBANKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_DEPOSITBANKNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_DEPOSITBANKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCR_BANKACUNUMNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.CR_BANKACUNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCR_BANKACUNUMNull() {
                this[this.tableTBPM_CHECKREQUEST.CR_BANKACUNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_PHONENUMNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_PHONENUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_PHONENUMNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_PHONENUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_DELIVERYDATENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_DELIVERYDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_DELIVERYDATENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_DELIVERYDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_COSTNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_COSTNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_NOTENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_NOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_NOTENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_NOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_YFKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_YFKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_YFKNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_YFKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_YFKLJNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_YFKLJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_YFKLJNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_YFKLJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_SFKLJNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_SFKLJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_SFKLJNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_SFKLJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_YFWKNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_YFWKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_YFWKNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_YFWKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_ERRORNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_ERRORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_ERRORNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_ERRORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_SPJENull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_SPJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_SPJENull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_SPJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_FHSJNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_FHSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_FHSJNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_FHSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCON_YZHTHNull() {
                return this.IsNull(this.tableTBPM_CHECKREQUEST.PCON_YZHTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCON_YZHTHNull() {
                this[this.tableTBPM_CHECKREQUEST.PCON_YZHTHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TBPM_CHECKREQUESTRowChangeEvent : global::System.EventArgs {
            
            private TBPM_CHECKREQUESTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTRowChangeEvent(TBPM_CHECKREQUESTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBPM_CHECKREQUESTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ZCZJ_DPF.Contract_Data.DataSetCheckRequestTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBPM_CHECKREQUESTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBPM_CHECKREQUESTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBPM_CHECKREQUEST";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CR_ID", "CR_ID");
            tableMapping.ColumnMappings.Add("CR_QKBM", "CR_QKBM");
            tableMapping.ColumnMappings.Add("CR_USE", "CR_USE");
            tableMapping.ColumnMappings.Add("CR_HTBH", "CR_HTBH");
            tableMapping.ColumnMappings.Add("CR_DATE", "CR_DATE");
            tableMapping.ColumnMappings.Add("CR_ZFFS", "CR_ZFFS");
            tableMapping.ColumnMappings.Add("CR_PZH", "CR_PZH");
            tableMapping.ColumnMappings.Add("CR_YFK", "CR_YFK");
            tableMapping.ColumnMappings.Add("CR_BQYFK", "CR_BQYFK");
            tableMapping.ColumnMappings.Add("CR_BQSFK", "CR_BQSFK");
            tableMapping.ColumnMappings.Add("CR_BQSFKDX", "CR_BQSFKDX");
            tableMapping.ColumnMappings.Add("CR_YKKHJ", "CR_YKKHJ");
            tableMapping.ColumnMappings.Add("CR_BQKYFK", "CR_BQKYFK");
            tableMapping.ColumnMappings.Add("CR_BQKZBJ", "CR_BQKZBJ");
            tableMapping.ColumnMappings.Add("CR_DKSK", "CR_DKSK");
            tableMapping.ColumnMappings.Add("CR_QT", "CR_QT");
            tableMapping.ColumnMappings.Add("CR_THKK", "CR_THKK");
            tableMapping.ColumnMappings.Add("CR_ZGLD", "CR_ZGLD");
            tableMapping.ColumnMappings.Add("CR_BMFZR", "CR_BMFZR");
            tableMapping.ColumnMappings.Add("CR_YSR", "CR_YSR");
            tableMapping.ColumnMappings.Add("CR_LD", "CR_LD");
            tableMapping.ColumnMappings.Add("CR_CWSH", "CR_CWSH");
            tableMapping.ColumnMappings.Add("CR_JBR", "CR_JBR");
            tableMapping.ColumnMappings.Add("CR_STATE", "CR_STATE");
            tableMapping.ColumnMappings.Add("CR_HTLB", "CR_HTLB");
            tableMapping.ColumnMappings.Add("CR_BQYZF", "CR_BQYZF");
            tableMapping.ColumnMappings.Add("PCON_BCODE", "PCON_BCODE");
            tableMapping.ColumnMappings.Add("PCON_JINE", "PCON_JINE");
            tableMapping.ColumnMappings.Add("PCON_NAME", "PCON_NAME");
            tableMapping.ColumnMappings.Add("PCON_PJID", "PCON_PJID");
            tableMapping.ColumnMappings.Add("PCON_PJNAME", "PCON_PJNAME");
            tableMapping.ColumnMappings.Add("PCON_RSPDEPID", "PCON_RSPDEPID");
            tableMapping.ColumnMappings.Add("PCON_ENGID", "PCON_ENGID");
            tableMapping.ColumnMappings.Add("PCON_ENGNAME", "PCON_ENGNAME");
            tableMapping.ColumnMappings.Add("PCON_TYPE", "PCON_TYPE");
            tableMapping.ColumnMappings.Add("PCON_ENGTYPE", "PCON_ENGTYPE");
            tableMapping.ColumnMappings.Add("PCON_MONUNIT", "PCON_MONUNIT");
            tableMapping.ColumnMappings.Add("PCON_FILLDATE", "PCON_FILLDATE");
            tableMapping.ColumnMappings.Add("PCON_VALIDDATE", "PCON_VALIDDATE");
            tableMapping.ColumnMappings.Add("PCON_CUSTMNAME", "PCON_CUSTMNAME");
            tableMapping.ColumnMappings.Add("PCON_CUSTMID", "PCON_CUSTMID");
            tableMapping.ColumnMappings.Add("PCON_ARCHVDATE", "PCON_ARCHVDATE");
            tableMapping.ColumnMappings.Add("PCON_ADUITDATE", "PCON_ADUITDATE");
            tableMapping.ColumnMappings.Add("PCON_CONTEXT", "PCON_CONTEXT");
            tableMapping.ColumnMappings.Add("PCON_RESPONSER", "PCON_RESPONSER");
            tableMapping.ColumnMappings.Add("PCON_DEPOSITBANK", "CR_DEPOSITBANK");
            tableMapping.ColumnMappings.Add("PCON_BANKACUNUM", "CR_BANKACUNUM");
            tableMapping.ColumnMappings.Add("PCON_PHONENUM", "PCON_PHONENUM");
            tableMapping.ColumnMappings.Add("PCON_DELIVERYDATE", "PCON_DELIVERYDATE");
            tableMapping.ColumnMappings.Add("PCON_COST", "PCON_COST");
            tableMapping.ColumnMappings.Add("PCON_NOTE", "PCON_NOTE");
            tableMapping.ColumnMappings.Add("PCON_FORM", "PCON_FORM");
            tableMapping.ColumnMappings.Add("PCON_STATE", "PCON_STATE");
            tableMapping.ColumnMappings.Add("PCON_YFK", "PCON_YFK");
            tableMapping.ColumnMappings.Add("PCON_YFKLJ", "PCON_YFKLJ");
            tableMapping.ColumnMappings.Add("PCON_SFKLJ", "PCON_SFKLJ");
            tableMapping.ColumnMappings.Add("PCON_YFWK", "PCON_YFWK");
            tableMapping.ColumnMappings.Add("PCON_ERROR", "PCON_ERROR");
            tableMapping.ColumnMappings.Add("PCON_SPJE", "PCON_SPJE");
            tableMapping.ColumnMappings.Add("PCON_JECHG", "PCON_JECHG");
            tableMapping.ColumnMappings.Add("PCON_QTCHG", "PCON_QTCHG");
            tableMapping.ColumnMappings.Add("PCON_FHSJ", "PCON_FHSJ");
            tableMapping.ColumnMappings.Add("PCON_YZHTH", "PCON_YZHTH");
            tableMapping.ColumnMappings.Add("DEP_NAME", "DEP_NAME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ZCZJDMPConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT a.ID, a.CR_ID, a.CR_QKBM, a.CR_USE, a.CR_HTBH, a.CR_DATE, a.CR_ZFFS, 
      a.CR_PZH, a.CR_YFK, a.CR_BQYFK, a.CR_BQSFK, a.CR_BQSFKDX, a.CR_YKKHJ, 
      a.CR_BQKYFK, a.CR_BQKZBJ, a.CR_DKSK, a.CR_QT, a.CR_THKK, a.CR_ZGLD, 
      a.CR_BMFZR, a.CR_YSR, a.CR_LD, a.CR_CWSH, a.CR_JBR, a.CR_STATE, 
      a.CR_HTLB, a.CR_BQYZF, b.PCON_BCODE, 
      (CASE WHEN b.PCON_BALANCEACNT != 0 THEN b.PCON_BALANCEACNT ELSE b.PCON_JINE
       END) AS PCON_JINE, b.PCON_NAME, b.PCON_PJID, b.PCON_PJNAME, 
      b.PCON_RSPDEPID, b.PCON_ENGID, b.PCON_ENGNAME, b.PCON_TYPE, 
      b.PCON_ENGTYPE, '元:RMB' AS PCON_MONUNIT, b.PCON_FILLDATE, 
      b.PCON_VALIDDATE, b.PCON_CUSTMNAME, b.PCON_CUSTMID, 
      b.PCON_ARCHVDATE, b.PCON_ADUITDATE, b.PCON_CONTEXT, 
      b.PCON_RESPONSER, b.PCON_DEPOSITBANK, b.PCON_BANKACUNUM, 
      b.PCON_PHONENUM, b.PCON_DELIVERYDATE, b.PCON_COST, b.PCON_NOTE, 
      b.PCON_FORM, b.PCON_STATE, b.PCON_YFK, b.PCON_YFKLJ, b.PCON_SFKLJ, 
      b.PCON_YFWK, b.PCON_ERROR, b.PCON_SPJE, b.PCON_JECHG, b.PCON_QTCHG, 
      b.PCON_FHSJ, b.PCON_YZHTH, c.DEP_NAME
FROM TBPM_CHECKREQUEST AS a INNER JOIN
      TBPM_CONPCHSINFO AS b ON a.CR_HTBH = b.PCON_BCODE INNER JOIN
      TBDS_DEPINFO AS c ON a.CR_QKBM = c.DEP_CODE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCheckRequest.TBPM_CHECKREQUESTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCheckRequest.TBPM_CHECKREQUESTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCheckRequest.TBPM_CHECKREQUESTDataTable dataTable = new DataSetCheckRequest.TBPM_CHECKREQUESTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DataSetCheckRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DataSetCheckRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DataSetCheckRequest dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DataSetCheckRequest dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591