//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ZCZJ_DPF.SM_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_SM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_SM : global::System.Data.DataSet {
        
        private SM_INDataTable tableSM_IN;
        
        private SM_OUTDataTable tableSM_OUT;
        
        private SM_MTODataTable tableSM_MTO;
        
        private SM_ALLOCATIONDataTable tableSM_ALLOCATION;
        
        private SM_PROJTEMPDataTable tableSM_PROJTEMP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_SM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_SM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SM_IN"] != null)) {
                    base.Tables.Add(new SM_INDataTable(ds.Tables["SM_IN"]));
                }
                if ((ds.Tables["SM_OUT"] != null)) {
                    base.Tables.Add(new SM_OUTDataTable(ds.Tables["SM_OUT"]));
                }
                if ((ds.Tables["SM_MTO"] != null)) {
                    base.Tables.Add(new SM_MTODataTable(ds.Tables["SM_MTO"]));
                }
                if ((ds.Tables["SM_ALLOCATION"] != null)) {
                    base.Tables.Add(new SM_ALLOCATIONDataTable(ds.Tables["SM_ALLOCATION"]));
                }
                if ((ds.Tables["SM_PROJTEMP"] != null)) {
                    base.Tables.Add(new SM_PROJTEMPDataTable(ds.Tables["SM_PROJTEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SM_INDataTable SM_IN {
            get {
                return this.tableSM_IN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SM_OUTDataTable SM_OUT {
            get {
                return this.tableSM_OUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SM_MTODataTable SM_MTO {
            get {
                return this.tableSM_MTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SM_ALLOCATIONDataTable SM_ALLOCATION {
            get {
                return this.tableSM_ALLOCATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SM_PROJTEMPDataTable SM_PROJTEMP {
            get {
                return this.tableSM_PROJTEMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_SM cln = ((DataSet_SM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SM_IN"] != null)) {
                    base.Tables.Add(new SM_INDataTable(ds.Tables["SM_IN"]));
                }
                if ((ds.Tables["SM_OUT"] != null)) {
                    base.Tables.Add(new SM_OUTDataTable(ds.Tables["SM_OUT"]));
                }
                if ((ds.Tables["SM_MTO"] != null)) {
                    base.Tables.Add(new SM_MTODataTable(ds.Tables["SM_MTO"]));
                }
                if ((ds.Tables["SM_ALLOCATION"] != null)) {
                    base.Tables.Add(new SM_ALLOCATIONDataTable(ds.Tables["SM_ALLOCATION"]));
                }
                if ((ds.Tables["SM_PROJTEMP"] != null)) {
                    base.Tables.Add(new SM_PROJTEMPDataTable(ds.Tables["SM_PROJTEMP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSM_IN = ((SM_INDataTable)(base.Tables["SM_IN"]));
            if ((initTable == true)) {
                if ((this.tableSM_IN != null)) {
                    this.tableSM_IN.InitVars();
                }
            }
            this.tableSM_OUT = ((SM_OUTDataTable)(base.Tables["SM_OUT"]));
            if ((initTable == true)) {
                if ((this.tableSM_OUT != null)) {
                    this.tableSM_OUT.InitVars();
                }
            }
            this.tableSM_MTO = ((SM_MTODataTable)(base.Tables["SM_MTO"]));
            if ((initTable == true)) {
                if ((this.tableSM_MTO != null)) {
                    this.tableSM_MTO.InitVars();
                }
            }
            this.tableSM_ALLOCATION = ((SM_ALLOCATIONDataTable)(base.Tables["SM_ALLOCATION"]));
            if ((initTable == true)) {
                if ((this.tableSM_ALLOCATION != null)) {
                    this.tableSM_ALLOCATION.InitVars();
                }
            }
            this.tableSM_PROJTEMP = ((SM_PROJTEMPDataTable)(base.Tables["SM_PROJTEMP"]));
            if ((initTable == true)) {
                if ((this.tableSM_PROJTEMP != null)) {
                    this.tableSM_PROJTEMP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_SM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_SM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSM_IN = new SM_INDataTable();
            base.Tables.Add(this.tableSM_IN);
            this.tableSM_OUT = new SM_OUTDataTable();
            base.Tables.Add(this.tableSM_OUT);
            this.tableSM_MTO = new SM_MTODataTable();
            base.Tables.Add(this.tableSM_MTO);
            this.tableSM_ALLOCATION = new SM_ALLOCATIONDataTable();
            base.Tables.Add(this.tableSM_ALLOCATION);
            this.tableSM_PROJTEMP = new SM_PROJTEMPDataTable();
            base.Tables.Add(this.tableSM_PROJTEMP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSM_IN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSM_OUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSM_MTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSM_ALLOCATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSM_PROJTEMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_SM ds = new DataSet_SM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SM_INRowChangeEventHandler(object sender, SM_INRowChangeEvent e);
        
        public delegate void SM_OUTRowChangeEventHandler(object sender, SM_OUTRowChangeEvent e);
        
        public delegate void SM_MTORowChangeEventHandler(object sender, SM_MTORowChangeEvent e);
        
        public delegate void SM_ALLOCATIONRowChangeEventHandler(object sender, SM_ALLOCATIONRowChangeEvent e);
        
        public delegate void SM_PROJTEMPRowChangeEventHandler(object sender, SM_PROJTEMPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SM_INDataTable : global::System.Data.TypedTableBase<SM_INRow> {
            
            private global::System.Data.DataColumn columnGYS;
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnSLCK;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnYDLX;
            
            private global::System.Data.DataColumn columnYDDH;
            
            private global::System.Data.DataColumn columnWLBM;
            
            private global::System.Data.DataColumn columnWLMC;
            
            private global::System.Data.DataColumn columnGGXH;
            
            private global::System.Data.DataColumn columnCZ;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnYSSL;
            
            private global::System.Data.DataColumn columnSSSL;
            
            private global::System.Data.DataColumn columnDJ;
            
            private global::System.Data.DataColumn columnJE;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnSHR;
            
            private global::System.Data.DataColumn columnZDR;
            
            private global::System.Data.DataColumn columnSLR;
            
            private global::System.Data.DataColumn columnJBR;
            
            private global::System.Data.DataColumn columnDYR;
            
            private global::System.Data.DataColumn columnPTC;
            
            private global::System.Data.DataColumn columnDYBH;
            
            private global::System.Data.DataColumn columnBILLTYPE;
            
            private global::System.Data.DataColumn columnOrderCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INDataTable() {
                this.TableName = "SM_IN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_INDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SM_INDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYSColumn {
                get {
                    return this.columnGYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLCKColumn {
                get {
                    return this.columnSLCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YDLXColumn {
                get {
                    return this.columnYDLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YDDHColumn {
                get {
                    return this.columnYDDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLBMColumn {
                get {
                    return this.columnWLBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLMCColumn {
                get {
                    return this.columnWLMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGXHColumn {
                get {
                    return this.columnGGXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CZColumn {
                get {
                    return this.columnCZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YSSLColumn {
                get {
                    return this.columnYSSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SSSLColumn {
                get {
                    return this.columnSSSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJColumn {
                get {
                    return this.columnDJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JEColumn {
                get {
                    return this.columnJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRColumn {
                get {
                    return this.columnSHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRColumn {
                get {
                    return this.columnZDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLRColumn {
                get {
                    return this.columnSLR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JBRColumn {
                get {
                    return this.columnJBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DYRColumn {
                get {
                    return this.columnDYR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTCColumn {
                get {
                    return this.columnPTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DYBHColumn {
                get {
                    return this.columnDYBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BILLTYPEColumn {
                get {
                    return this.columnBILLTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderCodeColumn {
                get {
                    return this.columnOrderCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INRow this[int index] {
                get {
                    return ((SM_INRow)(this.Rows[index]));
                }
            }
            
            public event SM_INRowChangeEventHandler SM_INRowChanging;
            
            public event SM_INRowChangeEventHandler SM_INRowChanged;
            
            public event SM_INRowChangeEventHandler SM_INRowDeleting;
            
            public event SM_INRowChangeEventHandler SM_INRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSM_INRow(SM_INRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INRow AddSM_INRow(
                        string GYS, 
                        decimal BH, 
                        string SLCK, 
                        string RQ, 
                        string YDLX, 
                        string YDDH, 
                        string WLBM, 
                        string WLMC, 
                        string GGXH, 
                        string CZ, 
                        string PH, 
                        string DW, 
                        string YSSL, 
                        string SSSL, 
                        string DJ, 
                        string JE, 
                        string BZ, 
                        string SHR, 
                        string ZDR, 
                        string SLR, 
                        string JBR, 
                        string DYR, 
                        string PTC, 
                        string DYBH, 
                        string BILLTYPE, 
                        string OrderCode) {
                SM_INRow rowSM_INRow = ((SM_INRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GYS,
                        BH,
                        SLCK,
                        RQ,
                        YDLX,
                        YDDH,
                        WLBM,
                        WLMC,
                        GGXH,
                        CZ,
                        PH,
                        DW,
                        YSSL,
                        SSSL,
                        DJ,
                        JE,
                        BZ,
                        SHR,
                        ZDR,
                        SLR,
                        JBR,
                        DYR,
                        PTC,
                        DYBH,
                        BILLTYPE,
                        OrderCode};
                rowSM_INRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSM_INRow);
                return rowSM_INRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SM_INDataTable cln = ((SM_INDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SM_INDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGYS = base.Columns["GYS"];
                this.columnBH = base.Columns["BH"];
                this.columnSLCK = base.Columns["SLCK"];
                this.columnRQ = base.Columns["RQ"];
                this.columnYDLX = base.Columns["YDLX"];
                this.columnYDDH = base.Columns["YDDH"];
                this.columnWLBM = base.Columns["WLBM"];
                this.columnWLMC = base.Columns["WLMC"];
                this.columnGGXH = base.Columns["GGXH"];
                this.columnCZ = base.Columns["CZ"];
                this.columnPH = base.Columns["PH"];
                this.columnDW = base.Columns["DW"];
                this.columnYSSL = base.Columns["YSSL"];
                this.columnSSSL = base.Columns["SSSL"];
                this.columnDJ = base.Columns["DJ"];
                this.columnJE = base.Columns["JE"];
                this.columnBZ = base.Columns["BZ"];
                this.columnSHR = base.Columns["SHR"];
                this.columnZDR = base.Columns["ZDR"];
                this.columnSLR = base.Columns["SLR"];
                this.columnJBR = base.Columns["JBR"];
                this.columnDYR = base.Columns["DYR"];
                this.columnPTC = base.Columns["PTC"];
                this.columnDYBH = base.Columns["DYBH"];
                this.columnBILLTYPE = base.Columns["BILLTYPE"];
                this.columnOrderCode = base.Columns["OrderCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGYS = new global::System.Data.DataColumn("GYS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYS);
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnSLCK = new global::System.Data.DataColumn("SLCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLCK);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnYDLX = new global::System.Data.DataColumn("YDLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYDLX);
                this.columnYDDH = new global::System.Data.DataColumn("YDDH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYDDH);
                this.columnWLBM = new global::System.Data.DataColumn("WLBM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLBM);
                this.columnWLMC = new global::System.Data.DataColumn("WLMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLMC);
                this.columnGGXH = new global::System.Data.DataColumn("GGXH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGXH);
                this.columnCZ = new global::System.Data.DataColumn("CZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCZ);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnYSSL = new global::System.Data.DataColumn("YSSL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYSSL);
                this.columnSSSL = new global::System.Data.DataColumn("SSSL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSSL);
                this.columnDJ = new global::System.Data.DataColumn("DJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJ);
                this.columnJE = new global::System.Data.DataColumn("JE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnSHR = new global::System.Data.DataColumn("SHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHR);
                this.columnZDR = new global::System.Data.DataColumn("ZDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDR);
                this.columnSLR = new global::System.Data.DataColumn("SLR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLR);
                this.columnJBR = new global::System.Data.DataColumn("JBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJBR);
                this.columnDYR = new global::System.Data.DataColumn("DYR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDYR);
                this.columnPTC = new global::System.Data.DataColumn("PTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTC);
                this.columnDYBH = new global::System.Data.DataColumn("DYBH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDYBH);
                this.columnBILLTYPE = new global::System.Data.DataColumn("BILLTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILLTYPE);
                this.columnOrderCode = new global::System.Data.DataColumn("OrderCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INRow NewSM_INRow() {
                return ((SM_INRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SM_INRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SM_INRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SM_INRowChanged != null)) {
                    this.SM_INRowChanged(this, new SM_INRowChangeEvent(((SM_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SM_INRowChanging != null)) {
                    this.SM_INRowChanging(this, new SM_INRowChangeEvent(((SM_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SM_INRowDeleted != null)) {
                    this.SM_INRowDeleted(this, new SM_INRowChangeEvent(((SM_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SM_INRowDeleting != null)) {
                    this.SM_INRowDeleting(this, new SM_INRowChangeEvent(((SM_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSM_INRow(SM_INRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_SM ds = new DataSet_SM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SM_INDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SM_OUTDataTable : global::System.Data.TypedTableBase<SM_OUTRow> {
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnYDLX;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnLLBM;
            
            private global::System.Data.DataColumn columnWLBM;
            
            private global::System.Data.DataColumn columnWLMC;
            
            private global::System.Data.DataColumn columnGGXH;
            
            private global::System.Data.DataColumn columnCZ;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnFLCK;
            
            private global::System.Data.DataColumn columnYDDH;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnSHR;
            
            private global::System.Data.DataColumn columnFLR;
            
            private global::System.Data.DataColumn columnZDR;
            
            private global::System.Data.DataColumn columnENGID;
            
            private global::System.Data.DataColumn columnPTC;
            
            private global::System.Data.DataColumn columnZDRQ;
            
            private global::System.Data.DataColumn columnGB;
            
            private global::System.Data.DataColumn columnBSH;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFLCW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTDataTable() {
                this.TableName = "SM_OUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_OUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SM_OUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YDLXColumn {
                get {
                    return this.columnYDLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LLBMColumn {
                get {
                    return this.columnLLBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLBMColumn {
                get {
                    return this.columnWLBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLMCColumn {
                get {
                    return this.columnWLMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGXHColumn {
                get {
                    return this.columnGGXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CZColumn {
                get {
                    return this.columnCZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLCKColumn {
                get {
                    return this.columnFLCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YDDHColumn {
                get {
                    return this.columnYDDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRColumn {
                get {
                    return this.columnSHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLRColumn {
                get {
                    return this.columnFLR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRColumn {
                get {
                    return this.columnZDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENGIDColumn {
                get {
                    return this.columnENGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTCColumn {
                get {
                    return this.columnPTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRQColumn {
                get {
                    return this.columnZDRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GBColumn {
                get {
                    return this.columnGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BSHColumn {
                get {
                    return this.columnBSH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLCWColumn {
                get {
                    return this.columnFLCW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTRow this[int index] {
                get {
                    return ((SM_OUTRow)(this.Rows[index]));
                }
            }
            
            public event SM_OUTRowChangeEventHandler SM_OUTRowChanging;
            
            public event SM_OUTRowChangeEventHandler SM_OUTRowChanged;
            
            public event SM_OUTRowChangeEventHandler SM_OUTRowDeleting;
            
            public event SM_OUTRowChangeEventHandler SM_OUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSM_OUTRow(SM_OUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTRow AddSM_OUTRow(
                        string BH, 
                        string YDLX, 
                        string RQ, 
                        string LLBM, 
                        string WLBM, 
                        string WLMC, 
                        string GGXH, 
                        string CZ, 
                        string DW, 
                        string SL, 
                        string PH, 
                        string FLCK, 
                        string YDDH, 
                        string BZ, 
                        string SHR, 
                        string FLR, 
                        string ZDR, 
                        string ENGID, 
                        string PTC, 
                        string ZDRQ, 
                        string GB, 
                        string BSH, 
                        string ID, 
                        string FLCW) {
                SM_OUTRow rowSM_OUTRow = ((SM_OUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BH,
                        YDLX,
                        RQ,
                        LLBM,
                        WLBM,
                        WLMC,
                        GGXH,
                        CZ,
                        DW,
                        SL,
                        PH,
                        FLCK,
                        YDDH,
                        BZ,
                        SHR,
                        FLR,
                        ZDR,
                        ENGID,
                        PTC,
                        ZDRQ,
                        GB,
                        BSH,
                        ID,
                        FLCW};
                rowSM_OUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSM_OUTRow);
                return rowSM_OUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SM_OUTDataTable cln = ((SM_OUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SM_OUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBH = base.Columns["BH"];
                this.columnYDLX = base.Columns["YDLX"];
                this.columnRQ = base.Columns["RQ"];
                this.columnLLBM = base.Columns["LLBM"];
                this.columnWLBM = base.Columns["WLBM"];
                this.columnWLMC = base.Columns["WLMC"];
                this.columnGGXH = base.Columns["GGXH"];
                this.columnCZ = base.Columns["CZ"];
                this.columnDW = base.Columns["DW"];
                this.columnSL = base.Columns["SL"];
                this.columnPH = base.Columns["PH"];
                this.columnFLCK = base.Columns["FLCK"];
                this.columnYDDH = base.Columns["YDDH"];
                this.columnBZ = base.Columns["BZ"];
                this.columnSHR = base.Columns["SHR"];
                this.columnFLR = base.Columns["FLR"];
                this.columnZDR = base.Columns["ZDR"];
                this.columnENGID = base.Columns["ENGID"];
                this.columnPTC = base.Columns["PTC"];
                this.columnZDRQ = base.Columns["ZDRQ"];
                this.columnGB = base.Columns["GB"];
                this.columnBSH = base.Columns["BSH"];
                this.columnID = base.Columns["ID"];
                this.columnFLCW = base.Columns["FLCW"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnYDLX = new global::System.Data.DataColumn("YDLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYDLX);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnLLBM = new global::System.Data.DataColumn("LLBM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLBM);
                this.columnWLBM = new global::System.Data.DataColumn("WLBM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLBM);
                this.columnWLMC = new global::System.Data.DataColumn("WLMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLMC);
                this.columnGGXH = new global::System.Data.DataColumn("GGXH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGXH);
                this.columnCZ = new global::System.Data.DataColumn("CZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCZ);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnFLCK = new global::System.Data.DataColumn("FLCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLCK);
                this.columnYDDH = new global::System.Data.DataColumn("YDDH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYDDH);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnSHR = new global::System.Data.DataColumn("SHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHR);
                this.columnFLR = new global::System.Data.DataColumn("FLR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLR);
                this.columnZDR = new global::System.Data.DataColumn("ZDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDR);
                this.columnENGID = new global::System.Data.DataColumn("ENGID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENGID);
                this.columnPTC = new global::System.Data.DataColumn("PTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTC);
                this.columnZDRQ = new global::System.Data.DataColumn("ZDRQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDRQ);
                this.columnGB = new global::System.Data.DataColumn("GB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGB);
                this.columnBSH = new global::System.Data.DataColumn("BSH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBSH);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFLCW = new global::System.Data.DataColumn("FLCW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLCW);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTRow NewSM_OUTRow() {
                return ((SM_OUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SM_OUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SM_OUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SM_OUTRowChanged != null)) {
                    this.SM_OUTRowChanged(this, new SM_OUTRowChangeEvent(((SM_OUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SM_OUTRowChanging != null)) {
                    this.SM_OUTRowChanging(this, new SM_OUTRowChangeEvent(((SM_OUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SM_OUTRowDeleted != null)) {
                    this.SM_OUTRowDeleted(this, new SM_OUTRowChangeEvent(((SM_OUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SM_OUTRowDeleting != null)) {
                    this.SM_OUTRowDeleting(this, new SM_OUTRowChangeEvent(((SM_OUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSM_OUTRow(SM_OUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_SM ds = new DataSet_SM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SM_OUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SM_MTODataTable : global::System.Data.TypedTableBase<SM_MTORow> {
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnWLDM;
            
            private global::System.Data.DataColumn columnWLMC;
            
            private global::System.Data.DataColumn columnGGXH;
            
            private global::System.Data.DataColumn columnCZ;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnCK;
            
            private global::System.Data.DataColumn columnFROMJH;
            
            private global::System.Data.DataColumn columnTOJH;
            
            private global::System.Data.DataColumn columnTZSL;
            
            private global::System.Data.DataColumn columnZDR;
            
            private global::System.Data.DataColumn columnJHY;
            
            private global::System.Data.DataColumn columnSHR;
            
            private global::System.Data.DataColumn columnBM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTODataTable() {
                this.TableName = "SM_MTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_MTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SM_MTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLDMColumn {
                get {
                    return this.columnWLDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLMCColumn {
                get {
                    return this.columnWLMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGXHColumn {
                get {
                    return this.columnGGXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CZColumn {
                get {
                    return this.columnCZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CKColumn {
                get {
                    return this.columnCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FROMJHColumn {
                get {
                    return this.columnFROMJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOJHColumn {
                get {
                    return this.columnTOJH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TZSLColumn {
                get {
                    return this.columnTZSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRColumn {
                get {
                    return this.columnZDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JHYColumn {
                get {
                    return this.columnJHY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRColumn {
                get {
                    return this.columnSHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BMColumn {
                get {
                    return this.columnBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTORow this[int index] {
                get {
                    return ((SM_MTORow)(this.Rows[index]));
                }
            }
            
            public event SM_MTORowChangeEventHandler SM_MTORowChanging;
            
            public event SM_MTORowChangeEventHandler SM_MTORowChanged;
            
            public event SM_MTORowChangeEventHandler SM_MTORowDeleting;
            
            public event SM_MTORowChangeEventHandler SM_MTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSM_MTORow(SM_MTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTORow AddSM_MTORow(
                        string BH, 
                        string RQ, 
                        string BZ, 
                        string WLDM, 
                        string WLMC, 
                        string GGXH, 
                        string CZ, 
                        string DW, 
                        string PH, 
                        string CK, 
                        string FROMJH, 
                        string TOJH, 
                        string TZSL, 
                        string ZDR, 
                        string JHY, 
                        string SHR, 
                        string BM) {
                SM_MTORow rowSM_MTORow = ((SM_MTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BH,
                        RQ,
                        BZ,
                        WLDM,
                        WLMC,
                        GGXH,
                        CZ,
                        DW,
                        PH,
                        CK,
                        FROMJH,
                        TOJH,
                        TZSL,
                        ZDR,
                        JHY,
                        SHR,
                        BM};
                rowSM_MTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSM_MTORow);
                return rowSM_MTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SM_MTODataTable cln = ((SM_MTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SM_MTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBH = base.Columns["BH"];
                this.columnRQ = base.Columns["RQ"];
                this.columnBZ = base.Columns["BZ"];
                this.columnWLDM = base.Columns["WLDM"];
                this.columnWLMC = base.Columns["WLMC"];
                this.columnGGXH = base.Columns["GGXH"];
                this.columnCZ = base.Columns["CZ"];
                this.columnDW = base.Columns["DW"];
                this.columnPH = base.Columns["PH"];
                this.columnCK = base.Columns["CK"];
                this.columnFROMJH = base.Columns["FROMJH"];
                this.columnTOJH = base.Columns["TOJH"];
                this.columnTZSL = base.Columns["TZSL"];
                this.columnZDR = base.Columns["ZDR"];
                this.columnJHY = base.Columns["JHY"];
                this.columnSHR = base.Columns["SHR"];
                this.columnBM = base.Columns["BM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnWLDM = new global::System.Data.DataColumn("WLDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLDM);
                this.columnWLMC = new global::System.Data.DataColumn("WLMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLMC);
                this.columnGGXH = new global::System.Data.DataColumn("GGXH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGXH);
                this.columnCZ = new global::System.Data.DataColumn("CZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCZ);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnCK = new global::System.Data.DataColumn("CK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCK);
                this.columnFROMJH = new global::System.Data.DataColumn("FROMJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFROMJH);
                this.columnTOJH = new global::System.Data.DataColumn("TOJH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOJH);
                this.columnTZSL = new global::System.Data.DataColumn("TZSL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTZSL);
                this.columnZDR = new global::System.Data.DataColumn("ZDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDR);
                this.columnJHY = new global::System.Data.DataColumn("JHY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJHY);
                this.columnSHR = new global::System.Data.DataColumn("SHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHR);
                this.columnBM = new global::System.Data.DataColumn("BM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTORow NewSM_MTORow() {
                return ((SM_MTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SM_MTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SM_MTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SM_MTORowChanged != null)) {
                    this.SM_MTORowChanged(this, new SM_MTORowChangeEvent(((SM_MTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SM_MTORowChanging != null)) {
                    this.SM_MTORowChanging(this, new SM_MTORowChangeEvent(((SM_MTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SM_MTORowDeleted != null)) {
                    this.SM_MTORowDeleted(this, new SM_MTORowChangeEvent(((SM_MTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SM_MTORowDeleting != null)) {
                    this.SM_MTORowDeleting(this, new SM_MTORowChangeEvent(((SM_MTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSM_MTORow(SM_MTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_SM ds = new DataSet_SM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SM_MTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SM_ALLOCATIONDataTable : global::System.Data.TypedTableBase<SM_ALLOCATIONRow> {
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnTBLX;
            
            private global::System.Data.DataColumn columnWLDM;
            
            private global::System.Data.DataColumn columnWLMC;
            
            private global::System.Data.DataColumn columnGGXH;
            
            private global::System.Data.DataColumn columnCZ;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnTRCK;
            
            private global::System.Data.DataColumn columnTCCK;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnSHR;
            
            private global::System.Data.DataColumn columnYSR;
            
            private global::System.Data.DataColumn columnYWY;
            
            private global::System.Data.DataColumn columnBGR;
            
            private global::System.Data.DataColumn columnZDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONDataTable() {
                this.TableName = "SM_ALLOCATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_ALLOCATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SM_ALLOCATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TBLXColumn {
                get {
                    return this.columnTBLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLDMColumn {
                get {
                    return this.columnWLDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLMCColumn {
                get {
                    return this.columnWLMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGXHColumn {
                get {
                    return this.columnGGXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CZColumn {
                get {
                    return this.columnCZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRCKColumn {
                get {
                    return this.columnTRCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TCCKColumn {
                get {
                    return this.columnTCCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRColumn {
                get {
                    return this.columnSHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YSRColumn {
                get {
                    return this.columnYSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YWYColumn {
                get {
                    return this.columnYWY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BGRColumn {
                get {
                    return this.columnBGR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRColumn {
                get {
                    return this.columnZDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONRow this[int index] {
                get {
                    return ((SM_ALLOCATIONRow)(this.Rows[index]));
                }
            }
            
            public event SM_ALLOCATIONRowChangeEventHandler SM_ALLOCATIONRowChanging;
            
            public event SM_ALLOCATIONRowChangeEventHandler SM_ALLOCATIONRowChanged;
            
            public event SM_ALLOCATIONRowChangeEventHandler SM_ALLOCATIONRowDeleting;
            
            public event SM_ALLOCATIONRowChangeEventHandler SM_ALLOCATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSM_ALLOCATIONRow(SM_ALLOCATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONRow AddSM_ALLOCATIONRow(
                        string BH, 
                        string RQ, 
                        string TBLX, 
                        string WLDM, 
                        string WLMC, 
                        string GGXH, 
                        string CZ, 
                        string PH, 
                        string DW, 
                        string SL, 
                        string TRCK, 
                        string TCCK, 
                        string BZ, 
                        string SHR, 
                        string YSR, 
                        string YWY, 
                        string BGR, 
                        string ZDR) {
                SM_ALLOCATIONRow rowSM_ALLOCATIONRow = ((SM_ALLOCATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BH,
                        RQ,
                        TBLX,
                        WLDM,
                        WLMC,
                        GGXH,
                        CZ,
                        PH,
                        DW,
                        SL,
                        TRCK,
                        TCCK,
                        BZ,
                        SHR,
                        YSR,
                        YWY,
                        BGR,
                        ZDR};
                rowSM_ALLOCATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSM_ALLOCATIONRow);
                return rowSM_ALLOCATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SM_ALLOCATIONDataTable cln = ((SM_ALLOCATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SM_ALLOCATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBH = base.Columns["BH"];
                this.columnRQ = base.Columns["RQ"];
                this.columnTBLX = base.Columns["TBLX"];
                this.columnWLDM = base.Columns["WLDM"];
                this.columnWLMC = base.Columns["WLMC"];
                this.columnGGXH = base.Columns["GGXH"];
                this.columnCZ = base.Columns["CZ"];
                this.columnPH = base.Columns["PH"];
                this.columnDW = base.Columns["DW"];
                this.columnSL = base.Columns["SL"];
                this.columnTRCK = base.Columns["TRCK"];
                this.columnTCCK = base.Columns["TCCK"];
                this.columnBZ = base.Columns["BZ"];
                this.columnSHR = base.Columns["SHR"];
                this.columnYSR = base.Columns["YSR"];
                this.columnYWY = base.Columns["YWY"];
                this.columnBGR = base.Columns["BGR"];
                this.columnZDR = base.Columns["ZDR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnTBLX = new global::System.Data.DataColumn("TBLX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTBLX);
                this.columnWLDM = new global::System.Data.DataColumn("WLDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLDM);
                this.columnWLMC = new global::System.Data.DataColumn("WLMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLMC);
                this.columnGGXH = new global::System.Data.DataColumn("GGXH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGXH);
                this.columnCZ = new global::System.Data.DataColumn("CZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCZ);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnTRCK = new global::System.Data.DataColumn("TRCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRCK);
                this.columnTCCK = new global::System.Data.DataColumn("TCCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCCK);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnSHR = new global::System.Data.DataColumn("SHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHR);
                this.columnYSR = new global::System.Data.DataColumn("YSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYSR);
                this.columnYWY = new global::System.Data.DataColumn("YWY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYWY);
                this.columnBGR = new global::System.Data.DataColumn("BGR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBGR);
                this.columnZDR = new global::System.Data.DataColumn("ZDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDR);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONRow NewSM_ALLOCATIONRow() {
                return ((SM_ALLOCATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SM_ALLOCATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SM_ALLOCATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SM_ALLOCATIONRowChanged != null)) {
                    this.SM_ALLOCATIONRowChanged(this, new SM_ALLOCATIONRowChangeEvent(((SM_ALLOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SM_ALLOCATIONRowChanging != null)) {
                    this.SM_ALLOCATIONRowChanging(this, new SM_ALLOCATIONRowChangeEvent(((SM_ALLOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SM_ALLOCATIONRowDeleted != null)) {
                    this.SM_ALLOCATIONRowDeleted(this, new SM_ALLOCATIONRowChangeEvent(((SM_ALLOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SM_ALLOCATIONRowDeleting != null)) {
                    this.SM_ALLOCATIONRowDeleting(this, new SM_ALLOCATIONRowChangeEvent(((SM_ALLOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSM_ALLOCATIONRow(SM_ALLOCATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_SM ds = new DataSet_SM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SM_ALLOCATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SM_PROJTEMPDataTable : global::System.Data.TypedTableBase<SM_PROJTEMPRow> {
            
            private global::System.Data.DataColumn columnTNUM;
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnSHDATE;
            
            private global::System.Data.DataColumn columnWLCODE;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnCPTC;
            
            private global::System.Data.DataColumn columnDPTC;
            
            private global::System.Data.DataColumn columnWLNAME;
            
            private global::System.Data.DataColumn columnGGXH;
            
            private global::System.Data.DataColumn columnCAIZHI;
            
            private global::System.Data.DataColumn columnUNIT;
            
            private global::System.Data.DataColumn columnBM;
            
            private global::System.Data.DataColumn columnSHR;
            
            private global::System.Data.DataColumn columnZDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPDataTable() {
                this.TableName = "SM_PROJTEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_PROJTEMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SM_PROJTEMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TNUMColumn {
                get {
                    return this.columnTNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHDATEColumn {
                get {
                    return this.columnSHDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLCODEColumn {
                get {
                    return this.columnWLCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPTCColumn {
                get {
                    return this.columnCPTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPTCColumn {
                get {
                    return this.columnDPTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WLNAMEColumn {
                get {
                    return this.columnWLNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGXHColumn {
                get {
                    return this.columnGGXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAIZHIColumn {
                get {
                    return this.columnCAIZHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BMColumn {
                get {
                    return this.columnBM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRColumn {
                get {
                    return this.columnSHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDRColumn {
                get {
                    return this.columnZDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPRow this[int index] {
                get {
                    return ((SM_PROJTEMPRow)(this.Rows[index]));
                }
            }
            
            public event SM_PROJTEMPRowChangeEventHandler SM_PROJTEMPRowChanging;
            
            public event SM_PROJTEMPRowChangeEventHandler SM_PROJTEMPRowChanged;
            
            public event SM_PROJTEMPRowChangeEventHandler SM_PROJTEMPRowDeleting;
            
            public event SM_PROJTEMPRowChangeEventHandler SM_PROJTEMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSM_PROJTEMPRow(SM_PROJTEMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPRow AddSM_PROJTEMPRow(double TNUM, string BH, string SHDATE, string WLCODE, string PH, string CPTC, string DPTC, string WLNAME, string GGXH, string CAIZHI, string UNIT, string BM, string SHR, string ZDR) {
                SM_PROJTEMPRow rowSM_PROJTEMPRow = ((SM_PROJTEMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TNUM,
                        BH,
                        SHDATE,
                        WLCODE,
                        PH,
                        CPTC,
                        DPTC,
                        WLNAME,
                        GGXH,
                        CAIZHI,
                        UNIT,
                        BM,
                        SHR,
                        ZDR};
                rowSM_PROJTEMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSM_PROJTEMPRow);
                return rowSM_PROJTEMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SM_PROJTEMPDataTable cln = ((SM_PROJTEMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SM_PROJTEMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTNUM = base.Columns["TNUM"];
                this.columnBH = base.Columns["BH"];
                this.columnSHDATE = base.Columns["SHDATE"];
                this.columnWLCODE = base.Columns["WLCODE"];
                this.columnPH = base.Columns["PH"];
                this.columnCPTC = base.Columns["CPTC"];
                this.columnDPTC = base.Columns["DPTC"];
                this.columnWLNAME = base.Columns["WLNAME"];
                this.columnGGXH = base.Columns["GGXH"];
                this.columnCAIZHI = base.Columns["CAIZHI"];
                this.columnUNIT = base.Columns["UNIT"];
                this.columnBM = base.Columns["BM"];
                this.columnSHR = base.Columns["SHR"];
                this.columnZDR = base.Columns["ZDR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTNUM = new global::System.Data.DataColumn("TNUM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTNUM);
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnSHDATE = new global::System.Data.DataColumn("SHDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHDATE);
                this.columnWLCODE = new global::System.Data.DataColumn("WLCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLCODE);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnCPTC = new global::System.Data.DataColumn("CPTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPTC);
                this.columnDPTC = new global::System.Data.DataColumn("DPTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPTC);
                this.columnWLNAME = new global::System.Data.DataColumn("WLNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLNAME);
                this.columnGGXH = new global::System.Data.DataColumn("GGXH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGXH);
                this.columnCAIZHI = new global::System.Data.DataColumn("CAIZHI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAIZHI);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
                this.columnBM = new global::System.Data.DataColumn("BM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBM);
                this.columnSHR = new global::System.Data.DataColumn("SHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHR);
                this.columnZDR = new global::System.Data.DataColumn("ZDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDR);
                this.columnBH.AllowDBNull = false;
                this.columnBH.MaxLength = 50;
                this.columnSHDATE.MaxLength = 50;
                this.columnWLCODE.MaxLength = 20;
                this.columnPH.MaxLength = 500;
                this.columnCPTC.MaxLength = 500;
                this.columnDPTC.MaxLength = 200;
                this.columnWLNAME.MaxLength = 800;
                this.columnGGXH.MaxLength = 1000;
                this.columnCAIZHI.MaxLength = 400;
                this.columnUNIT.MaxLength = 50;
                this.columnBM.MaxLength = 50;
                this.columnSHR.MaxLength = 50;
                this.columnZDR.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPRow NewSM_PROJTEMPRow() {
                return ((SM_PROJTEMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SM_PROJTEMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SM_PROJTEMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SM_PROJTEMPRowChanged != null)) {
                    this.SM_PROJTEMPRowChanged(this, new SM_PROJTEMPRowChangeEvent(((SM_PROJTEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SM_PROJTEMPRowChanging != null)) {
                    this.SM_PROJTEMPRowChanging(this, new SM_PROJTEMPRowChangeEvent(((SM_PROJTEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SM_PROJTEMPRowDeleted != null)) {
                    this.SM_PROJTEMPRowDeleted(this, new SM_PROJTEMPRowChangeEvent(((SM_PROJTEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SM_PROJTEMPRowDeleting != null)) {
                    this.SM_PROJTEMPRowDeleting(this, new SM_PROJTEMPRowChangeEvent(((SM_PROJTEMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSM_PROJTEMPRow(SM_PROJTEMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_SM ds = new DataSet_SM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SM_PROJTEMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SM_INRow : global::System.Data.DataRow {
            
            private SM_INDataTable tableSM_IN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_INRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSM_IN = ((SM_INDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYS {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.GYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GYS\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.GYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BH {
                get {
                    try {
                        return ((decimal)(this[this.tableSM_IN.BHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BH\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLCK {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.SLCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLCK\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.SLCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RQ {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RQ\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YDLX {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.YDLXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YDLX\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.YDLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YDDH {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.YDDHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YDDH\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.YDDHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLBM {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.WLBMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLBM\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.WLBMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLMC {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.WLMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLMC\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.WLMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GGXH {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.GGXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GGXH\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.GGXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.CZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CZ\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.CZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.DWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DW\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YSSL {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.YSSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YSSL\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.YSSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSSL {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.SSSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSSL\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.SSSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJ {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.DJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DJ\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.DJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.JEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JE\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.JEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BZ\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHR {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.SHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHR\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.SHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDR {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.ZDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDR\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.ZDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLR {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.SLRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLR\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.SLRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JBR {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.JBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JBR\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.JBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DYR {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.DYRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DYR\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.DYRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTC {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.PTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTC\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.PTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DYBH {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.DYBHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DYBH\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.DYBHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILLTYPE {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.BILLTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BILLTYPE\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.BILLTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderCode {
                get {
                    try {
                        return ((string)(this[this.tableSM_IN.OrderCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCode\' in table \'SM_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_IN.OrderCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYSNull() {
                return this.IsNull(this.tableSM_IN.GYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYSNull() {
                this[this.tableSM_IN.GYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBHNull() {
                return this.IsNull(this.tableSM_IN.BHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBHNull() {
                this[this.tableSM_IN.BHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLCKNull() {
                return this.IsNull(this.tableSM_IN.SLCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLCKNull() {
                this[this.tableSM_IN.SLCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableSM_IN.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableSM_IN.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYDLXNull() {
                return this.IsNull(this.tableSM_IN.YDLXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYDLXNull() {
                this[this.tableSM_IN.YDLXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYDDHNull() {
                return this.IsNull(this.tableSM_IN.YDDHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYDDHNull() {
                this[this.tableSM_IN.YDDHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLBMNull() {
                return this.IsNull(this.tableSM_IN.WLBMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLBMNull() {
                this[this.tableSM_IN.WLBMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLMCNull() {
                return this.IsNull(this.tableSM_IN.WLMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLMCNull() {
                this[this.tableSM_IN.WLMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGXHNull() {
                return this.IsNull(this.tableSM_IN.GGXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGXHNull() {
                this[this.tableSM_IN.GGXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCZNull() {
                return this.IsNull(this.tableSM_IN.CZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCZNull() {
                this[this.tableSM_IN.CZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHNull() {
                return this.IsNull(this.tableSM_IN.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHNull() {
                this[this.tableSM_IN.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.tableSM_IN.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.tableSM_IN.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYSSLNull() {
                return this.IsNull(this.tableSM_IN.YSSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYSSLNull() {
                this[this.tableSM_IN.YSSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSSLNull() {
                return this.IsNull(this.tableSM_IN.SSSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSSLNull() {
                this[this.tableSM_IN.SSSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJNull() {
                return this.IsNull(this.tableSM_IN.DJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJNull() {
                this[this.tableSM_IN.DJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJENull() {
                return this.IsNull(this.tableSM_IN.JEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJENull() {
                this[this.tableSM_IN.JEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableSM_IN.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableSM_IN.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRNull() {
                return this.IsNull(this.tableSM_IN.SHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRNull() {
                this[this.tableSM_IN.SHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRNull() {
                return this.IsNull(this.tableSM_IN.ZDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRNull() {
                this[this.tableSM_IN.ZDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLRNull() {
                return this.IsNull(this.tableSM_IN.SLRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLRNull() {
                this[this.tableSM_IN.SLRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJBRNull() {
                return this.IsNull(this.tableSM_IN.JBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJBRNull() {
                this[this.tableSM_IN.JBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDYRNull() {
                return this.IsNull(this.tableSM_IN.DYRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDYRNull() {
                this[this.tableSM_IN.DYRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTCNull() {
                return this.IsNull(this.tableSM_IN.PTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTCNull() {
                this[this.tableSM_IN.PTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDYBHNull() {
                return this.IsNull(this.tableSM_IN.DYBHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDYBHNull() {
                this[this.tableSM_IN.DYBHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILLTYPENull() {
                return this.IsNull(this.tableSM_IN.BILLTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILLTYPENull() {
                this[this.tableSM_IN.BILLTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderCodeNull() {
                return this.IsNull(this.tableSM_IN.OrderCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderCodeNull() {
                this[this.tableSM_IN.OrderCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SM_OUTRow : global::System.Data.DataRow {
            
            private SM_OUTDataTable tableSM_OUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_OUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSM_OUT = ((SM_OUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BH {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.BHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BH\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YDLX {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.YDLXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YDLX\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.YDLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RQ {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RQ\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LLBM {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.LLBMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LLBM\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.LLBMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLBM {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.WLBMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLBM\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.WLBMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLMC {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.WLMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLMC\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.WLMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GGXH {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.GGXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GGXH\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.GGXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.CZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CZ\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.CZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.DWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DW\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.SLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SL\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLCK {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.FLCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLCK\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.FLCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YDDH {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.YDDHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YDDH\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.YDDHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BZ\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHR {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.SHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHR\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.SHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLR {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.FLRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLR\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.FLRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDR {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.ZDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDR\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.ZDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENGID {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.ENGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENGID\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.ENGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTC {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.PTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTC\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.PTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDRQ {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.ZDRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDRQ\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.ZDRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GB {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.GBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GB\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.GBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BSH {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.BSHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BSH\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.BSHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLCW {
                get {
                    try {
                        return ((string)(this[this.tableSM_OUT.FLCWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLCW\' in table \'SM_OUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_OUT.FLCWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBHNull() {
                return this.IsNull(this.tableSM_OUT.BHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBHNull() {
                this[this.tableSM_OUT.BHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYDLXNull() {
                return this.IsNull(this.tableSM_OUT.YDLXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYDLXNull() {
                this[this.tableSM_OUT.YDLXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableSM_OUT.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableSM_OUT.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLBMNull() {
                return this.IsNull(this.tableSM_OUT.LLBMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLBMNull() {
                this[this.tableSM_OUT.LLBMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLBMNull() {
                return this.IsNull(this.tableSM_OUT.WLBMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLBMNull() {
                this[this.tableSM_OUT.WLBMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLMCNull() {
                return this.IsNull(this.tableSM_OUT.WLMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLMCNull() {
                this[this.tableSM_OUT.WLMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGXHNull() {
                return this.IsNull(this.tableSM_OUT.GGXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGXHNull() {
                this[this.tableSM_OUT.GGXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCZNull() {
                return this.IsNull(this.tableSM_OUT.CZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCZNull() {
                this[this.tableSM_OUT.CZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.tableSM_OUT.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.tableSM_OUT.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNull() {
                return this.IsNull(this.tableSM_OUT.SLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNull() {
                this[this.tableSM_OUT.SLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHNull() {
                return this.IsNull(this.tableSM_OUT.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHNull() {
                this[this.tableSM_OUT.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLCKNull() {
                return this.IsNull(this.tableSM_OUT.FLCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLCKNull() {
                this[this.tableSM_OUT.FLCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYDDHNull() {
                return this.IsNull(this.tableSM_OUT.YDDHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYDDHNull() {
                this[this.tableSM_OUT.YDDHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableSM_OUT.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableSM_OUT.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRNull() {
                return this.IsNull(this.tableSM_OUT.SHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRNull() {
                this[this.tableSM_OUT.SHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLRNull() {
                return this.IsNull(this.tableSM_OUT.FLRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLRNull() {
                this[this.tableSM_OUT.FLRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRNull() {
                return this.IsNull(this.tableSM_OUT.ZDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRNull() {
                this[this.tableSM_OUT.ZDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENGIDNull() {
                return this.IsNull(this.tableSM_OUT.ENGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENGIDNull() {
                this[this.tableSM_OUT.ENGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTCNull() {
                return this.IsNull(this.tableSM_OUT.PTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTCNull() {
                this[this.tableSM_OUT.PTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRQNull() {
                return this.IsNull(this.tableSM_OUT.ZDRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRQNull() {
                this[this.tableSM_OUT.ZDRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGBNull() {
                return this.IsNull(this.tableSM_OUT.GBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGBNull() {
                this[this.tableSM_OUT.GBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBSHNull() {
                return this.IsNull(this.tableSM_OUT.BSHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBSHNull() {
                this[this.tableSM_OUT.BSHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableSM_OUT.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableSM_OUT.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLCWNull() {
                return this.IsNull(this.tableSM_OUT.FLCWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLCWNull() {
                this[this.tableSM_OUT.FLCWColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SM_MTORow : global::System.Data.DataRow {
            
            private SM_MTODataTable tableSM_MTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_MTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSM_MTO = ((SM_MTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BH {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.BHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BH\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RQ {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RQ\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BZ\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLDM {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.WLDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLDM\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.WLDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLMC {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.WLMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLMC\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.WLMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GGXH {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.GGXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GGXH\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.GGXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.CZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CZ\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.CZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.DWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DW\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CK {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.CKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CK\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.CKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FROMJH {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.FROMJHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FROMJH\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.FROMJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOJH {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.TOJHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOJH\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.TOJHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TZSL {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.TZSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TZSL\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.TZSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDR {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.ZDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDR\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.ZDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JHY {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.JHYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JHY\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.JHYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHR {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.SHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHR\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.SHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BM {
                get {
                    try {
                        return ((string)(this[this.tableSM_MTO.BMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM\' in table \'SM_MTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_MTO.BMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBHNull() {
                return this.IsNull(this.tableSM_MTO.BHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBHNull() {
                this[this.tableSM_MTO.BHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableSM_MTO.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableSM_MTO.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableSM_MTO.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableSM_MTO.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLDMNull() {
                return this.IsNull(this.tableSM_MTO.WLDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLDMNull() {
                this[this.tableSM_MTO.WLDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLMCNull() {
                return this.IsNull(this.tableSM_MTO.WLMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLMCNull() {
                this[this.tableSM_MTO.WLMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGXHNull() {
                return this.IsNull(this.tableSM_MTO.GGXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGXHNull() {
                this[this.tableSM_MTO.GGXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCZNull() {
                return this.IsNull(this.tableSM_MTO.CZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCZNull() {
                this[this.tableSM_MTO.CZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.tableSM_MTO.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.tableSM_MTO.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHNull() {
                return this.IsNull(this.tableSM_MTO.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHNull() {
                this[this.tableSM_MTO.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCKNull() {
                return this.IsNull(this.tableSM_MTO.CKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCKNull() {
                this[this.tableSM_MTO.CKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFROMJHNull() {
                return this.IsNull(this.tableSM_MTO.FROMJHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFROMJHNull() {
                this[this.tableSM_MTO.FROMJHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOJHNull() {
                return this.IsNull(this.tableSM_MTO.TOJHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOJHNull() {
                this[this.tableSM_MTO.TOJHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTZSLNull() {
                return this.IsNull(this.tableSM_MTO.TZSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTZSLNull() {
                this[this.tableSM_MTO.TZSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRNull() {
                return this.IsNull(this.tableSM_MTO.ZDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRNull() {
                this[this.tableSM_MTO.ZDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJHYNull() {
                return this.IsNull(this.tableSM_MTO.JHYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJHYNull() {
                this[this.tableSM_MTO.JHYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRNull() {
                return this.IsNull(this.tableSM_MTO.SHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRNull() {
                this[this.tableSM_MTO.SHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBMNull() {
                return this.IsNull(this.tableSM_MTO.BMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBMNull() {
                this[this.tableSM_MTO.BMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SM_ALLOCATIONRow : global::System.Data.DataRow {
            
            private SM_ALLOCATIONDataTable tableSM_ALLOCATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_ALLOCATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSM_ALLOCATION = ((SM_ALLOCATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BH {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.BHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BH\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RQ {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RQ\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TBLX {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.TBLXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TBLX\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.TBLXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLDM {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.WLDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLDM\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.WLDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLMC {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.WLMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLMC\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.WLMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GGXH {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.GGXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GGXH\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.GGXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.CZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CZ\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.CZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.DWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DW\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.SLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SL\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRCK {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.TRCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRCK\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.TRCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TCCK {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.TCCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCCK\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.TCCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BZ\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHR {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.SHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHR\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.SHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YSR {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.YSRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YSR\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.YSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YWY {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.YWYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YWY\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.YWYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BGR {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.BGRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BGR\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.BGRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDR {
                get {
                    try {
                        return ((string)(this[this.tableSM_ALLOCATION.ZDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDR\' in table \'SM_ALLOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_ALLOCATION.ZDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBHNull() {
                return this.IsNull(this.tableSM_ALLOCATION.BHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBHNull() {
                this[this.tableSM_ALLOCATION.BHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableSM_ALLOCATION.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableSM_ALLOCATION.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTBLXNull() {
                return this.IsNull(this.tableSM_ALLOCATION.TBLXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTBLXNull() {
                this[this.tableSM_ALLOCATION.TBLXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLDMNull() {
                return this.IsNull(this.tableSM_ALLOCATION.WLDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLDMNull() {
                this[this.tableSM_ALLOCATION.WLDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLMCNull() {
                return this.IsNull(this.tableSM_ALLOCATION.WLMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLMCNull() {
                this[this.tableSM_ALLOCATION.WLMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGXHNull() {
                return this.IsNull(this.tableSM_ALLOCATION.GGXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGXHNull() {
                this[this.tableSM_ALLOCATION.GGXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCZNull() {
                return this.IsNull(this.tableSM_ALLOCATION.CZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCZNull() {
                this[this.tableSM_ALLOCATION.CZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHNull() {
                return this.IsNull(this.tableSM_ALLOCATION.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHNull() {
                this[this.tableSM_ALLOCATION.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.tableSM_ALLOCATION.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.tableSM_ALLOCATION.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNull() {
                return this.IsNull(this.tableSM_ALLOCATION.SLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNull() {
                this[this.tableSM_ALLOCATION.SLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRCKNull() {
                return this.IsNull(this.tableSM_ALLOCATION.TRCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRCKNull() {
                this[this.tableSM_ALLOCATION.TRCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTCCKNull() {
                return this.IsNull(this.tableSM_ALLOCATION.TCCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTCCKNull() {
                this[this.tableSM_ALLOCATION.TCCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableSM_ALLOCATION.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableSM_ALLOCATION.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRNull() {
                return this.IsNull(this.tableSM_ALLOCATION.SHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRNull() {
                this[this.tableSM_ALLOCATION.SHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYSRNull() {
                return this.IsNull(this.tableSM_ALLOCATION.YSRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYSRNull() {
                this[this.tableSM_ALLOCATION.YSRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYWYNull() {
                return this.IsNull(this.tableSM_ALLOCATION.YWYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYWYNull() {
                this[this.tableSM_ALLOCATION.YWYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBGRNull() {
                return this.IsNull(this.tableSM_ALLOCATION.BGRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBGRNull() {
                this[this.tableSM_ALLOCATION.BGRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRNull() {
                return this.IsNull(this.tableSM_ALLOCATION.ZDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRNull() {
                this[this.tableSM_ALLOCATION.ZDRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SM_PROJTEMPRow : global::System.Data.DataRow {
            
            private SM_PROJTEMPDataTable tableSM_PROJTEMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SM_PROJTEMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSM_PROJTEMP = ((SM_PROJTEMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TNUM {
                get {
                    try {
                        return ((double)(this[this.tableSM_PROJTEMP.TNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TNUM\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.TNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BH {
                get {
                    return ((string)(this[this.tableSM_PROJTEMP.BHColumn]));
                }
                set {
                    this[this.tableSM_PROJTEMP.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHDATE {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.SHDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHDATE\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.SHDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLCODE {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.WLCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLCODE\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.WLCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPTC {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.CPTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPTC\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.CPTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DPTC {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.DPTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPTC\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.DPTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLNAME {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.WLNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WLNAME\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.WLNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GGXH {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.GGXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GGXH\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.GGXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAIZHI {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.CAIZHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAIZHI\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.CAIZHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BM {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.BMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BM\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.BMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHR {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.SHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHR\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.SHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDR {
                get {
                    try {
                        return ((string)(this[this.tableSM_PROJTEMP.ZDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDR\' in table \'SM_PROJTEMP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSM_PROJTEMP.ZDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTNUMNull() {
                return this.IsNull(this.tableSM_PROJTEMP.TNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTNUMNull() {
                this[this.tableSM_PROJTEMP.TNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHDATENull() {
                return this.IsNull(this.tableSM_PROJTEMP.SHDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHDATENull() {
                this[this.tableSM_PROJTEMP.SHDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLCODENull() {
                return this.IsNull(this.tableSM_PROJTEMP.WLCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLCODENull() {
                this[this.tableSM_PROJTEMP.WLCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHNull() {
                return this.IsNull(this.tableSM_PROJTEMP.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHNull() {
                this[this.tableSM_PROJTEMP.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPTCNull() {
                return this.IsNull(this.tableSM_PROJTEMP.CPTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPTCNull() {
                this[this.tableSM_PROJTEMP.CPTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPTCNull() {
                return this.IsNull(this.tableSM_PROJTEMP.DPTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPTCNull() {
                this[this.tableSM_PROJTEMP.DPTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLNAMENull() {
                return this.IsNull(this.tableSM_PROJTEMP.WLNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLNAMENull() {
                this[this.tableSM_PROJTEMP.WLNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGXHNull() {
                return this.IsNull(this.tableSM_PROJTEMP.GGXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGXHNull() {
                this[this.tableSM_PROJTEMP.GGXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAIZHINull() {
                return this.IsNull(this.tableSM_PROJTEMP.CAIZHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAIZHINull() {
                this[this.tableSM_PROJTEMP.CAIZHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITNull() {
                return this.IsNull(this.tableSM_PROJTEMP.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITNull() {
                this[this.tableSM_PROJTEMP.UNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBMNull() {
                return this.IsNull(this.tableSM_PROJTEMP.BMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBMNull() {
                this[this.tableSM_PROJTEMP.BMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHRNull() {
                return this.IsNull(this.tableSM_PROJTEMP.SHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHRNull() {
                this[this.tableSM_PROJTEMP.SHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDRNull() {
                return this.IsNull(this.tableSM_PROJTEMP.ZDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDRNull() {
                this[this.tableSM_PROJTEMP.ZDRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SM_INRowChangeEvent : global::System.EventArgs {
            
            private SM_INRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INRowChangeEvent(SM_INRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_INRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SM_OUTRowChangeEvent : global::System.EventArgs {
            
            private SM_OUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTRowChangeEvent(SM_OUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_OUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SM_MTORowChangeEvent : global::System.EventArgs {
            
            private SM_MTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTORowChangeEvent(SM_MTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_MTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SM_ALLOCATIONRowChangeEvent : global::System.EventArgs {
            
            private SM_ALLOCATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONRowChangeEvent(SM_ALLOCATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_ALLOCATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SM_PROJTEMPRowChangeEvent : global::System.EventArgs {
            
            private SM_PROJTEMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPRowChangeEvent(SM_PROJTEMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SM_PROJTEMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591